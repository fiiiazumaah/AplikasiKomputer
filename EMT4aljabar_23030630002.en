% * EMT untuk Perhitungan Aljabar
% 
% Pada notebook ini Anda belajar menggunakan EMT untuk melakukan
% berbagai perhitungan terkait dengan materi atau topik dalam Aljabar.
% Kegiatan yang harus Anda lakukan adalah sebagai berikut:
% 
% - Membaca secara cermat dan teliti notebook ini;
%% - Menerjemahkan teks bahasa Inggris ke bahasa Indonesia;
%% - Mencoba contoh-contoh perhitungan (perintah EMT) dengan cara
% meng-ENTER setiap perintah EMT yang ada (pindahkan kursor ke baris
% perintah)
%% - Jika perlu Anda dapat memodifikasi perintah yang ada dan memberikan
% keterangan/penjelasan tambahan terkait hasilnya.
%% - Menyisipkan baris-baris perintah baru untuk mengerjakan soal-soal
% Aljabar dari file PDF yang saya berikan;
%% - Memberi catatan hasilnya.
%% - Jika perlu tuliskan soalnya pada teks notebook (menggunakan format
% LaTeX).
%% - Gunakan tampilan hasil semua perhitungan yang eksak atau simbolik
% dengan format LaTeX. (Seperti contoh-contoh pada notebook ini.)
% 
% ** Contoh pertama
% 
% Menyederhanakan bentuk aljabar:
% 
% latex: 6x^{-3}y^5\times -7x^2y^{-9}
% %image% EMT4aljabar_23030630002-001.png
% // latex: 6x^{-3}y^5\times -7x^2y^{-9}
% 
>$&6*x^(-3)*y^5*-7*x^2*y^(-9)
 %image% EMT4aljabar_23030630002-002.png
% // latex: -\frac{42}{x\,y^4}
% 
% Menjabarkan:
% 
% latex: (6x^{-3}+y^5)(-7x^2-y^{-9})
>$&showev('expand((6*x^(-3)+y^5)*(-7*x^2-y^(-9))))
 %image% EMT4aljabar_23030630002-003.png
% // latex: {\it expand}\left(\left(-\frac{1}{y^9}-7\,x^2\right)\,\left(y^5+  \frac{6}{x^3}\right)\right)=-7\,x^2\,y^5-\frac{1}{y^4}-\frac{6}{x^3  \,y^9}-\frac{42}{x}
% ** Contoh soal
% 
% 1. Sederhanakan
% 
% latex: \left(\frac{24a^{10}b^{-8}c^7}{12a^{6}b^{-3}c^5}\right)^{-5}
% %image% EMT4aljabar_23030630002-004.png
% // latex: \left(\frac{24a^{10}b^{-8}c^7}{12a^{6}b^{-3}c^5}\right)^{-5}
>$&((24*a^10*b^-8*c^7)/(12*a^6*b^-3*c^5))^-5
 %image% EMT4aljabar_23030630002-005.png
% // latex: \frac{b^{25}}{32\,a^{20}\,c^{10}}
% 2. Sederhanakan
% 
% latex: \left(\frac{125p^{12}q^{-14}r^{22}}{25p^8q^6r^{-15}}\right)^{-4}
% %image% EMT4aljabar_23030630002-006.png
% // latex: \left(\frac{125p^{12}q^{-14}r^{22}}{25p^8q^6r^{-15}}\right)^{-4}
>$&((125*p^(12)*q^(-14)*r^(22))/25*p^8*q^6*r^(-15))^(-4)
 %image% EMT4aljabar_23030630002-007.png
% // latex: \frac{q^{32}}{625\,p^{80}\,r^{28}}
% 3. Sederhanakan
% 
% latex: \frac{3a^2b-2ab^2}{4ab}
% %image% EMT4aljabar_23030630002-008.png
% // latex: \frac{3a^2b-2ab^2}{4ab}
>$&(3*a^2*b-2*a*b^2)/(4*a*b)
 %image% EMT4aljabar_23030630002-009.png
% // latex: \frac{3\,a^2\,b-2\,a\,b^2}{4\,a\,b}
% 4. Jabarkan
% 
% latex: (2x+1)(3x-2)
% %image% EMT4aljabar_23030630002-010.png
% // latex: (2x+1)(3x-2)
>$&showev('expand((2*x+1)*(3*x-2)))
 %image% EMT4aljabar_23030630002-011.png
% // latex: {\it expand}\left(\left(2\,x+1\right)\,\left(3\,x-2\right)\right)=6  \,x^2-x-2
% 5. Jabarkan
% 
% latex: (5x^2y^5)(7x^3y^2)
% %image% EMT4aljabar_23030630002-012.png
% // latex: (5x^2y^5)(7x^3y^2)
>$&showev('expand((5*x^2*y^5)*(7*x^3*y^2)))
 %image% EMT4aljabar_23030630002-013.png
% // latex: {\it expand}\left(35\,x^5\,y^7\right)=35\,x^5\,y^7
% 
% ** Baris Perintah
% 
% Baris perintah Euler terdiri dari satu atau lebih perintah Euler
% diikuti dengan titik koma ";" atau koma ",". Titik koma mencegah
% pencetakan hasil. Koma setelah perintah terakhir dapat dihilangkan.
% 
% Baris perintah berikut hanya akan mencetak hasil ekspresi, bukan
% perintah tugas atau format.
>r:=2; h:=4; pi*r^2*h/3
16.7551608191
% Perintah harus dipisahkan dengan spasi. Baris perintah berikut
% mencetak dua hasilnya.
>pi*2*r*h, %+2*pi*r*h // Ingat tanda % menyatakan hasil perhitungan terakhir sebelumnya
50.2654824574
100.530964915
% Baris perintah dieksekusi sesuai urutan pengguna menekan tombol enter.
% Jadi Anda akan mendapatkan nilai baru setiap kali Anda mengeksekusi
% baris kedua.
>x := 1;
>x := cos(x) // nilai cosinus (x dalam radian)
0.540302305868
>x := cos(x)
0.857553215846
% Jika dua baris dihubungkan dengan "..." kedua baris akan selalu
% dieksekusi secara bersamaan.
>x := 1.5; ...
>x := (x+2/x)/2, x := (x+2/x)/2, x := (x+2/x)/2, 
1.41666666667
1.41421568627
1.41421356237
% Ini juga merupakan cara yang baik untuk menyebarkan perintah yang
% panjang ke dua atau lebih baris. Anda dapat menekan Ctrl+Return untuk
% membagi baris menjadi dua pada posisi kursor saat ini, atau Ctlr+Back
% untuk menggabungkan baris-baris tersebut.
% 
% Untuk melipat semua baris yang terdiri dari beberapa baris, tekan
% Ctrl+L. Kemudian baris-baris berikutnya hanya akan terlihat, jika
% salah satunya menjadi fokus. Untuk melipat satu baris yang terdiri
% dari beberapa baris, mulailah baris pertama dengan "%+ ".
>%+ x=4+5; ...
> // Baris ini tidak akan terlihat setelah kursor berada di luar baris
% Baris yang dimulai dengan %% tidak akan terlihat sama sekali.
>%% x^2 // Baris ini tidak akan terlihat.
81
% Euler mendukung perulangan dalam baris perintah, asalkan dapat
% dimasukkan ke dalam satu baris atau beberapa baris. Dalam program,
% pembatasan ini tentu saja tidak berlaku. Untuk informasi lebih lanjut,
% lihat pengantar berikut.
>x=1; for i=1 to 5; x := (x+2/x)/2, end; // menghitung akar 2
1.5
1.41666666667
1.41421568627
1.41421356237
1.41421356237
% Tidak papa menggunakan beberapa baris. Pastikan baris diakhiri dengan
% "...".
>x := 1.5; // comments go here before the ...
>repeat xnew:=(x+2/x)/2; until xnew~=x; ...
>   x := xnew; ...
>end; ...
>x,
1.41421356237
% Bisa juga digunakan untuk struktur condisional
>if E^pi>pi^E; then "Thought so!", endif;
Thought so!
% 
% Saat Anda menjalankan perintah, kursor dapat berada di posisi mana
% pun. Anda dapat kembali ke perintah sebelumnya atau melompat ke
% perintah berikutnya dengan tombol panah. Atau Anda dapat mengeklik
% bagian komentar di atas perintah untuk membuka perintah tersebut.
% 
% Saat Anda menggerakkan kursor di sepanjang baris, pasangan tanda
% kurung buka dan tutup akan disorot. Perhatikan juga baris status.
% Setelah tanda kurung buka fungsi sqrt(), baris status akan menampilkan
% teks bantuan untuk fungsi tersebut. Jalankan perintah dengan tombol
% return.
>sqrt(sin(10°)/cos(20°))
0.429875017772
% Untuk melihat bantuan untuk perintah terbaru, buka jendela bantuan
% dengan F1. Di sana, Anda dapat memasukkan teks yang ingin dicari. Pada
% baris kosong, bantuan untuk jendela bantuan akan ditampilkan. Anda
% dapat menekan escape untuk menghapus baris, atau untuk menutup jendela
% bantuan.
% 
% Anda dapat mengklik dua kali perintah apa pun untuk membuka bantuan
% untuk perintah ini. Coba klik dua kali perintah exp di bawah ini pada
% baris perintah.
>exp(log(2.5))
2.5
% Anda juga dapat menyalin dan menempel di Euler. Gunakan Ctrl-C dan
% Ctrl-V untuk ini. Untuk menandai teks, seret mouse atau gunakan shift 
%% bersamaan dengan tombol kursor apa pun. Selain itu, Anda dapat
% menyalin tanda kurung yang disorot.
>//
% 
% ** Basic Syntax
% 
% Euler mengetahui fungsi matematika yang umum. Seperti yang telah Anda
% lihat di atas, fungsi trigonometri bekerja dalam radian atau derajat.
% Untuk mengonversi ke derajat, tambahkan simbol derajat (dengan tombol
% F7) ke nilai, atau gunakan fungsi rad(x). Fungsi akar kuadrat disebut
% sqrt di Euler. Tentu saja, x^(1/2) juga memungkinkan.
% 
% Untuk mengatur variabel, gunakan "=" atau ":=". Demi kejelasan,
% pengantar ini menggunakan bentuk yang terakhir. Spasi tidak menjadi
% masalah. Namun, diharapkan ada spasi di antara perintah.
% 
% Beberapa perintah dalam satu baris dipisahkan dengan "," atau ";".
% Titik koma menghilangkan output perintah. Di akhir baris perintah, ","
% diasumsikan, jika ";" tidak ada.
>g:=9.81; t:=2.5; 1/2*g*t^2
30.65625
% EMT menggunakan sintaks pemrograman untuk ekspresi. Untuk memasukkan
% 
% latex: e^2 \cdot \left( \frac{1}{3+4 \log(0.6)}+\frac{1}{7} \right)
% %image% EMT4aljabar_23030630002-014.png
% // latex: e^2 \cdot \left( \frac{1}{3+4 \log(0.6)}+\frac{1}{7} \right)
% 
% Anda harus menetapkan tanda kurung yang benar dan menggunakan / untuk
% pecahan. Perhatikan tanda kurung yang disorot untuk mendapatkan
% bantuan. Perhatikan bahwa konstanta Euler e diberi nama E dalam EMT.
>E^2*(1/(3+4*log(0.6))+1/7)
8.77908249441
% Untuk menghitung ekspresi rumit seperti
% 
% latex: \left(\frac{\frac17 + \frac18 + 2}{\frac13 + \frac12}\right)^2\pi
% %image% EMT4aljabar_23030630002-015.png
% // latex: \left(\frac{\frac17 + \frac18 + 2}{\frac13 + \frac12}\right)^2\pi
% 
% anda perlu memasukkan dalam baris formula
>((1/7 + 1/8 + 2) / (1/3 + 1/2))^2 * pi
23.2671801626
% Letakkan tanda kurung di sekitar sub-ekspresi yang perlu dihitung
% terlebih dahulu dengan hati-hati. EMT membantu Anda dengan menyorot
% ekspresi yang diakhiri tanda kurung tutup. Anda juga harus memasukkan
% "pi" untuk mewakili pi.
% 
% Hasil perhitungan ini adalah angka floating point. Angka ini dicetak
% dengan akurasi sekitar 12 digit secara default. Pada baris perintah
% berikut, kita juga mempelajari cara merujuk ke hasil sebelumnya dalam
% baris yang sama.
>1/3+1/7, fraction %
0.47619047619
10/21
% Perintah Euler dapat berupa ekspresi atau perintah primitif. Ekspresi
% terdiri dari operator dan fungsi. Jika perlu, ekspresi harus berisi
% tanda kurung untuk memastikan urutan eksekusi yang benar. Jika ragu,
% sebaiknya gunakan tanda kurung. Perhatikan bahwa EMT menampilkan tanda
% kurung buka dan tutup saat mengedit baris perintah.
>(cos(pi/4)+1)^3*(sin(pi/4)+1)^2
14.4978445072
% Operator numerik Euler meliputi
% 
% + operator plus
%% - operator minus
%% *, /
%% . perkalian matriks
%% a^b pangkat untuk a positif atau integer b (a**b juga berfungsi)
%% n! operator faktorial
% 
% dan masih banyak lagi.
% 
% Berikut ini beberapa fungsi yang mungkin Anda perlukan. Masih banyak
% lagi.
% 
% sin,cos,tan,atan,asin,acos,rad,deg
%% log,exp,log10,sqrt,logbase
%% bin,logbin,logfac,mod,floor,ceil,round,abs,sign
%% conj,re,im,arg,conj,real,complex
%% beta,betai,gamma,complexgamma,ellrf,ellf,ellrd,elle
%% bitand,bitor,bitxor,bitnot
% 
% Beberapa perintah memiliki alias, misalnya ln untuk log.
>ln(E^2), arctan(tan(0.5))
2
0.5
>sin(30°)
0.5
% Pastikan untuk menggunakan tanda kurung (kurung bundar), jika ada
% keraguan tentang urutan eksekusi! Berikut ini tidak sama
% dengan(2^3)^4, yang merupakan default untuk 2^3^4 dalam EMT (beberapa
% sistem numerik melakukannya dengan cara lain).
>2^3^4, (2^3)^4, 2^(3^4)
2.41785163923e+24
4096
2.41785163923e+24
% ** Real Numbers
% 
% Tipe data utama dalam Euler adalah bilangan riil. Bilangan riil
% direpresentasikan dalam format IEEE dengan akurasi sekitar 16 digit 
%% desimal.
>longest 1/3
     0.3333333333333333 
% Representasi ganda internal membutuhkan 8 byte.
>printdual(1/3)
1.0101010101010101010101010101010101010101010101010101*2^-2
>printhex(1/3)
5.5555555555554*16^-1
% ** Strings
% 
% Suatu string dalam Euler didefinisikan dengan "...".
>"A string can contain anything."
A string can contain anything.
% String dapat dirangkai dengan | atau dengan +. Ini juga berlaku untuk
% angka, yang dalam kasus tersebut diubah menjadi string.
>"The area of the circle with radius " + 2 + " cm is " + pi*4 + " cm^2."
The area of the circle with radius 2 cm is 12.5663706144 cm^2.
% Fungsi cetak juga mengonversi angka menjadi string. Fungsi ini dapat
% memuat sejumlah digit dan sejumlah tempat (0 untuk keluaran padat),
% dan optimalnya satu unit.
>"Golden Ratio : " + print((1+sqrt(5))/2,5,0)
Golden Ratio : 1.61803
% Ada string khusus none, yang tidak dicetak. String ini dikembalikan
% oleh beberapa fungsi, ketika hasilnya tidak penting. (Dikembalikan
% secara otomatis, jika fungsi tersebut tidak memiliki pernyataan
% return.)
>none
% Untuk mengubah string menjadi angka, cukup evaluasi string tersebut.
% Ini juga berlaku untuk ekspresi (lihat di bawah).
>"1234.5"()
1234.5
% Untuk mendefinisikan vektor string, gunakan notasi vektor [...]
>v:=["affe","charlie","bravo"]
affe
charlie
bravo
% String dari vektor kosong dilambangkan dengan [none]. Vektor string
% dapat dirangkai.
>w:=[none]; w|v|v
affe
charlie
bravo
affe
charlie
bravo
% String dapat berisi karakter Unicode. Secara internal, string ini
% berisi kode UTF-8. Untuk membuat string seperti itu, gunakan u"..."
% dan salah satu entitas HTML.
% 
% String Unicode dapat dirangkai seperti string lainnya.
>u"&alpha; = " + 45 + u"&deg;" // pdfLaTeX mungkin gagal menampilkan secara benar
ï»¿Î± = 45Â°
% I
>
% Dalam komentar, entitas yang sama seperti &alpha;, &beta; dll. dapat
% digunakan. Ini mungkin merupakan alternatif cepat untuk Latex.(Rincian
% lebih lanjut tentang komentar ada di bawah).
>//
% Ada beberapa fungsi untuk membuat atau menganalisis string unicode.
% Fungsi strtochar() akan mengenali string Unicode dan menerjemahkannya
% dengan benar.
>v=strtochar(u"&Auml; is a German letter")
[196,  32,  105,  115,  32,  97,  32,  71,  101,  114,  109,  97,  110,
32,  108,  101,  116,  116,  101,  114]
% Hasilnya adalah vektor angka Unicode. Fungsi kebalikannya adalah
% chartoutf().
>v[1]=strtochar(u"&Uuml;")[1]; chartoutf(v)
ï»¿Ãœ is a German letter
% Fungsi utf() dapat menerjemahkan string dengan entitas dalam variabel
% menjadi string Unicode.
>s="We have &alpha;=&beta;."; utf(s) // pdfLaTeX mungkin gagal menampilkan secara benar
ï»¿We have Î±=Î².
% Memungkinkan juga untuk menggunakan entitas numerik.
>u"&#196;hnliches"
ï»¿Ã„hnliches
% ** Nilai Boolean
% 
% Nilai Boolean direpresentasikan dengan 1=benar atau 0=salah dalam
% Euler. String dapat dibandingkan, seperti halnya angka.
>2<1, "apel"<"banana"
0
1
% "and" adalah operator "&&" dan "or" adalah operator "||", seperti
% dalam bahasa C. (Kata "and" dan "or" hanya dapat digunakan dalam
% kondisi"if".)
>2<E && E<3
1
% Operator Boolean mematuhi aturan bahasa matriks.
>(1:10)>5, nonzeros(%)
[0,  0,  0,  0,  0,  1,  1,  1,  1,  1]
[6,  7,  8,  9,  10]
% Anda dapat menggunakan fungsi nonzeros() untuk mengekstrak elemen
% tertentu dari sebuah vektor. Dalam contoh ini, kami menggunakan
% kondisional isprime(n).
>N=2|3:2:99 // N berisi elemen 2 dan bilangan2 ganjil dari 3 s.d. 99
[2,  3,  5,  7,  9,  11,  13,  15,  17,  19,  21,  23,  25,  27,  29,
31,  33,  35,  37,  39,  41,  43,  45,  47,  49,  51,  53,  55,  57,
59,  61,  63,  65,  67,  69,  71,  73,  75,  77,  79,  81,  83,  85,
87,  89,  91,  93,  95,  97,  99]
>N[nonzeros(isprime(N))] //pilih anggota2 N yang prima
[2,  3,  5,  7,  11,  13,  17,  19,  23,  29,  31,  37,  41,  43,  47,
53,  59,  61,  67,  71,  73,  79,  83,  89,  97]
% ** Format Output
% 
% Format output default EMT mencetak 12 digit. Untuk memastikan bahwa
% kita melihat default, kita mengatur ulang formatnya.
>defformat; pi
3.14159265359
% Secara internal, EMT menggunakan standar IEEE untuk angka ganda dengan
% sekitar 16 digit desimal. Untuk melihat jumlah digit lengkap, gunakan
% perintah "longestformat", atau kami menggunakan operator "longest"
% untuk menampilkan hasil dalam format terpanjang.
>longest pi
      3.141592653589793 
% Berikut adalah representasi heksadesimal internal dari angka ganda.
>printhex(pi)
3.243F6A8885A30*16^0
% Format output dapat diubah secara permanen dengan perintah format.
>format(12,5); 1/3, pi, sin(1)
    0.33333 
    3.14159 
    0.84147 
% Format defaultnya adalah(12).
>format(12); 1/3
0.333333333333
% Fungsi seperti "shortestformat", "shortformat", "longformat" bekerja
% untuk vektor dengan cara berikut.
>shortestformat; random(3,8)
  0.66    0.2   0.89   0.28   0.53   0.31   0.44    0.3 
  0.28   0.88   0.27    0.7   0.22   0.45   0.31   0.91 
  0.19   0.46  0.095    0.6   0.43   0.73   0.47   0.32 
% Format default untuk skalar adalah format(12). Namun, ini dapat
% diubah.
>setscalarformat(5); pi
3.1416
% Fungsi "longestformat" juga mengatur format skalar.
>longestformat; pi
3.141592653589793
% Sebagai referensi, berikut adalah daftar format keluaran yang paling
% penting.
% 
% shortestformat shortformat longformat, longestformat
%%  format(length,digits) goodformat(length)
%%  fracformat(length)
%%  defformat
% 
% Akurasi internal EMT adalah sekitar 16 tempat desimal, yang merupakan
% standar IEEE. Angka disimpan dalam format internal ini.
% 
% Namun format keluaran EMT dapat diatur secara fleksibel.
>longestformat; pi,
3.141592653589793
>format(10,5); pi
  3.14159 
% Standarnya adalah defformat().
>defformat; // default
% Ada operator pendek yang hanya mencetak satu nilai. Operator "longest"
% akan mencetak semua digit angka yang valid.
>longest pi^2/2
      4.934802200544679 
% Ada juga operator pendek untuk mencetak hasil dalam format pecahan.
% Kami telah menggunakannya di atas.
>fraction 1+1/2+1/3+1/4
25/12
% Karena format internal menggunakan cara biner untuk menyimpan angka,
% nilai 0,1 tidak akan terwakili secara tepat. Kesalahannya bertambah
% sedikit, seperti yang Anda lihat dalam perhitungan berikut.
>longest 0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1-1
 -1.110223024625157e-16 
% Namun dengan "longformat" default, Anda tidak akan melihat hal ini.
% Demi kenyamanan, output angka yang sangat kecil adalah 0.
>0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1+0.1-1
0
% * Ekspresi
% 
% String atau nama dapat digunakan untuk menyimpan ekspresi matematika,
% yang dapat dievaluasi oleh EMT. Untuk ini, gunakan tanda kurung
% setelah ekspresi. Jika Anda ingin menggunakan string sebagai ekspresi,
% gunakan konvensi untuk menamainya "fx" atau "fxy", dst. Ekspresi lebih
% diutamakan daripada fungsi.
% 
% Variabel global dapat digunakan dalam evaluasi.
>r:=2; fx:="pi*r^2"; longest fx()
      12.56637061435917 
% Parameter ditetapkan ke x, y, dan z dalam urutan tersebut. Parameter
% tambahan dapat ditambahkan menggunakan parameter yang ditetapkan.
>fx:="a*sin(x)^2"; fx(5,a=-1)
-0.919535764538
% Perhatikan bahwa ekspresi akan selalu menggunakan variabel global,
% bahkan jika ada variabel dalam suatu fungsi dengan nama yang
% sama.(Jika tidak, evaluasi ekspresi dalam fungsi dapat memberikan
% hasil yang sangat membingungkan bagi pengguna yang memanggil fungsi
% tersebut.)
>at:=4; function f(expr,x,at) := expr(x); ...
>f("at*x^2",3,5) // computes 4*3^2 not 5*3^2
36
% Jika Anda ingin menggunakan nilai lain untuk "at" selain nilai global,
% Anda perlu menambahkan "at=value".
>at:=4; function f(expr,x,a) := expr(x,at=a); ...
>f("at*x^2",3,5)
45
% Sebagai referensi, kami mencatat bahwa koleksi panggilan (dibahas di
% tempat lain) dapat berisi ekspresi. Jadi, kita dapat membuat contoh di
% atas sebagai berikut.
>at:=4; function f(expr,x) := expr(x); ...
>f({{"at*x^2",at=5}},3)
45
% Ekspresi dalam x sering digunakan, seperti fungsi.
%% Perlu dicatat bahwa mendefinisikan fungsi dengan nama yang sama
% seperti ekspresi simbolik global akan menghapus variabel ini untuk
% menghindari kebingungan antara ekspresi simbolik dan fungsi.
>f &= 5*x;
>function f(x) := 6*x;
>f(2)
12
% Berdasarkan konvensi, ekspresi simbolik atau numerik harus diberi nama
% fx, fxy, dst. Skema penamaan ini tidak boleh digunakan untuk fungsi.
>fx &= diff(x^x,x); $&fx
 %image% EMT4aljabar_23030630002-016.png
% // latex: x^{x}\,\left(\log x+1\right)
% Bentuk khusus dari suatu ekspresi memperbolehkan variabel apa pun
% sebagai parameter tanpa nama untuk evaluasi ekspresi, bukan hanya "x",
% "y", dst. Untuk ini, awali ekspresi dengan "@(variabel) ...".
>"@(a,b) a^2+b^2", %(4,5)
@(a,b) a^2+b^2
41
% Hal ini memungkinkan untuk memanipulasi ekspresi dalam variabel lain
% untuk fungsi EMT yang memerlukan ekspresi dalam "x".
% 
% Cara paling dasar untuk mendefinisikan fungsi sederhana adalah dengan
% menyimpan rumusnya dalam ekspresi simbolik atau numerik. Jika variabel
% utamanya adalah x, ekspresi tersebut dapat dievaluasi seperti halnya
% fungsi.
% 
% Seperti yang Anda lihat dalam contoh berikut, variabel global terlihat
% selama evaluasi.
>fx &= x^3-a*x;  ...
>a=1.2; fx(0.5)
-0.475
% Semua variabel lain dalam ekspresi dapat ditentukan dalam evaluasi
% menggunakan parameter yang ditetapkan.
>fx(0.5,a=1.1)
-0.425
% Suatu ekspresi tidak harus bersifat simbolis. Hal ini diperlukan jika
% ekspresi tersebut mengandung fungsi-fungsi yang hanya diketahui 
%% dalam kernel numerik, bukan dalam Maxima.
% 
% * Matematika Simbolik
% 
% EMT mengerjakan matematika simbolik dengan bantuan Maxima. Untuk
% detailnya, mulailah dengan tutorial berikut, atau telusuri referensi
% untuk Maxima. Para ahli di Maxima harus memperhatikan bahwa ada
% perbedaan sintaksis antara sintaksis asli Maxima dan sintaksis default
% ekspresi simbolik di EMT.
% 
% Matematika simbolik terintegrasi dengan mulus ke Euler dengan &.
% Ekspresi apa pun yang dimulai dengan & adalah ekspresi simbolik.
% Ekspresi tersebut dievaluasi dan dicetak oleh Maxima.
% 
% Pertama-tama, Maxima memiliki aritmatika "tak terbatas" yang dapat
% menangani angka yang sangat besar.
>$&44!
 %image% EMT4aljabar_23030630002-017.png
% // latex: 2658271574788448768043625811014615890319638528000000000
% Dengan cara ini, Anda dapat menghitung hasil yang besar secara tepat.
% Mari kita hitung
% 
% latex: C(44,10) = \frac{44!}{34! \cdot 10!}
% %image% EMT4aljabar_23030630002-018.png
% // latex: C(44,10) = \frac{44!}{34! \cdot 10!}
>$& 44!/(34!*10!) // nilai C(44,10)
 %image% EMT4aljabar_23030630002-019.png
% // latex: 2481256778
% Tentu saja, Maxima memiliki fungsi yang lebih efisien untuk ini
% (seperti halnya bagian numerik EMT).
>$binomial(44,10) //menghitung C(44,10) menggunakan fungsi binomial()
 %image% EMT4aljabar_23030630002-020.png
% // latex: 2481256778
% Untuk mempelajari lebih lanjut tentang fungsi tertentu, klik dua kali
% pada fungsi tersebut. Misalnya, coba klik dua kali pada "&binomial" di
% baris perintah sebelumnya. Ini akan membuka dokumentasi Maxima
% sebagaimana disediakan oleh penulis program tersebut.
% 
% Anda akan mempelajari bahwa hal berikut juga berfungsi.
% 
% latex: C(x,3)=\frac{x!}{(x-3)!3!}=\frac{(x-2)(x-1)x}{6}
% %image% EMT4aljabar_23030630002-021.png
% // latex: C(x,3)=\frac{x!}{(x-3)!3!}=\frac{(x-2)(x-1)x}{6}
>$binomial(x,3) // C(x,3)
 %image% EMT4aljabar_23030630002-022.png
% // latex: \frac{\left(x-2\right)\,\left(x-1\right)\,x}{6}
% Jika Anda ingin mengganti x dengan nilai tertentu gunakan "with".
>$&binomial(x,3) with x=10 // substitusi x=10 ke C(x,3)
 %image% EMT4aljabar_23030630002-023.png
% // latex: 120
% Dengan cara itu Anda dapat menggunakan solusi persamaan dalam
% persamaan lain.
% 
% Ekspresi simbolik dicetak oleh Maxima dalam bentuk 2D. Alasannya
% adalah adanya tanda simbolik khusus dalam string.
% 
% Seperti yang telah Anda lihat pada contoh sebelumnya dan berikutnya,
% jika Anda telah menginstal LaTeX, Anda dapat mencetak ekspresi
% simbolik dengan Latex. Jika tidak, perintah berikut akan mengeluarkan
% pesan kesalahan.
% 
% Untuk mencetak ekspresi simbolik dengan LaTeX, gunakan $ di depan &
% (atau Anda dapat menghilangkan &) sebelum perintah. Jangan jalankan
% perintah Maxima dengan $, jika Anda tidak menginstal LaTeX.
>$(3+x)/(x^2+1)
 %image% EMT4aljabar_23030630002-024.png
% // latex: \frac{x+3}{x^2+1}
% Ekspresi simbolik diurai oleh Euler. Jika Anda memerlukan sintaksis
% yang kompleks dalam satu ekspresi, Anda dapat melampirkan ekspresi
% tersebut dalam "...". Menggunakan lebih dari satu ekspresi sederhana
% dimungkinkan, tetapi sangat tidak disarankan.
>&"v := 5; v^2"

                                  25

% Untuk kelengkapan, kami mencatat bahwa ekspresi simbolik dapat
% digunakan dalam program, tetapi harus disertakan dalam tanda kutip.
% Selain itu, akan jauh lebih efektif untuk memanggil Maxima pada waktu
% kompilasi jika memungkinkan.
>$&expand((1+x)^4), $&factor(diff(%,x)) // diff: turunan, factor: faktor
 %image% EMT4aljabar_23030630002-025.png
% // latex: x^4+4\,x^3+6\,x^2+4\,x+1
 %image% EMT4aljabar_23030630002-026.png
% // latex: 4\,\left(x+1\right)^3
% Sekali lagi, % mengacu pada hasil sebelumnya.
% 
% Untuk mempermudah, kami menyimpan solusi ke variabel simbolik.
% Variabel simbolik didefinisikan dengan "&="
>fx &= (x+1)/(x^4+1); $&fx
 %image% EMT4aljabar_23030630002-027.png
% // latex: \frac{x+1}{x^4+1}
% Ekspresi simbolik dapat digunakan dalam ekspresi simbolik lainnya.
>$&factor(diff(fx,x))
 %image% EMT4aljabar_23030630002-028.png
% // latex: \frac{-3\,x^4-4\,x^3+1}{\left(x^4+1\right)^2}
% Input langsung perintah Maxima juga tersedia. Awali baris perintah
% dengan "::". Sintaks Maxima disesuaikan dengan sintaks EMT (disebut
% "mode kompatibilitas").
>&factor(20!)

                         2432902008176640000

>::: factor(10!)

                               8  4  2
                              2  3  5  7

>:: factor(20!)

                        18  8  4  2
                       2   3  5  7  11 13 17 19

% Jika Anda ahli dalam Maxima, Anda mungkin ingin menggunakan sintaksis
% asli Maxima. Anda dapat melakukannya dengan ":::".
>::: av:g$ av^2;

                                   2
                                  g

>fx &= x^3*exp(x), $fx

                                 3  x
                                x  E

 %image% EMT4aljabar_23030630002-029.png
% // latex: x^3\,e^{x}
% Variabel tersebut dapat digunakan dalam ekspresi simbolik lainnya.
% Perhatikan bahwa dalam perintah berikut sisi kanan &= dievaluasi
% sebelum penugasan ke Fx.
>&(fx with x=5), $%, &float(%)

                                     5
                                125 E

 %image% EMT4aljabar_23030630002-030.png
% // latex: 125\,e^5

                          18551.64488782208

>fx(5)
18551.6448878
>
% Untuk mengevaluasi suatu ekspresi dengan nilai variabel tertentu, Anda
% dapat menggunakan operator "with".
% 
% Baris perintah berikut juga menunjukkan bahwa Maxima dapat
% mengevaluasi ekspresi secara numerik dengan float().
>&(fx with x=10)-(fx with x=5), &float(%)

                                10        5
                          1000 E   - 125 E


                         2.20079141499189e+7

>$factor(diff(fx,x,2))
 %image% EMT4aljabar_23030630002-031.png
% // latex: x\,\left(x^2+6\,x+6\right)\,e^{x}
% Untuk mendapatkan kode Latex untuk suatu ekspresi, Anda dapat
% menggunakan perintah tex.
>tex(fx)
x^3\,e^{x}
% Ekspresi simbolik dapat dievaluasi seperti halnya ekspresi numerik.
>fx(0.5)
0.206090158838
% alam ekspresi simbolik, ini tidak berfungsi, karena Maxima tidak
% mendukungnya. Sebagai gantinya, gunakan sintaks "with" (bentuk yang
% lebih baik dari perintah at(...) dari Maxima).
>$&fx with x=1/2
 %image% EMT4aljabar_23030630002-032.png
% // latex: \frac{\sqrt{e}}{8}
% Penugasan tersebut juga dapat bersifat simbolis.
>$&fx with x=1+t
 %image% EMT4aljabar_23030630002-033.png
% // latex: \left(t+1\right)^3\,e^{t+1}
>
% Perintah solve memecahkan ekspresi simbolik untuk variabel dalam
% Maxima. Hasilnya adalah vektor solusi.
>$&solve(x^2+x=4,x)
 %image% EMT4aljabar_23030630002-034.png
% // latex: \left[ x=\frac{-\sqrt{17}-1}{2} , x=\frac{\sqrt{17}-1}{2} \right] 
% Bandingkan dengan perintah numerik "solve" di Euler, yang memerlukan
% nilai awal, dan secara opsional nilai target.
>solve("x^2+x",1,y=4)
1.56155281281
% Nilai numerik dari solusi simbolik dapat dihitung dengan mengevaluasi
% hasil simbolik. Euler akan membaca ulang penugasan x= dst. Jika Anda
% tidak memerlukan hasil numerik untuk perhitungan lebih lanjut, Anda
% juga dapat membiarkan Maxima menemukan nilai numeriknya.
>sol &= solve(x^2+2*x=4,x); $&sol, sol(), $&float(sol)
 %image% EMT4aljabar_23030630002-035.png
% // latex: \left[ x=-\sqrt{5}-1 , x=\sqrt{5}-1 \right] 
[-3.23607,  1.23607]
 %image% EMT4aljabar_23030630002-036.png
% // latex: \left[ x=-3.23606797749979 , x=1.23606797749979 \right] 
% Untuk mendapatkan solusi simbolis yang spesifik, seseorang dapat
% menggunakan "with" dan index.
>$&solve(x^2+x=1,x), x2 &= x with %[2]; $&x2
 %image% EMT4aljabar_23030630002-037.png
% // latex: \left[ x=\frac{-\sqrt{5}-1}{2} , x=\frac{\sqrt{5}-1}{2} \right] 
 %image% EMT4aljabar_23030630002-038.png
% // latex: \frac{\sqrt{5}-1}{2}
% Untuk menyelesaikan sistem persamaan, gunakan vektor persamaan.
% Hasilnya adalah vektor solusi.
>sol &= solve([x+y=3,x^2+y^2=5],[x,y]); $&sol, $&x*y with sol[1]
 %image% EMT4aljabar_23030630002-039.png
% // latex: \left[ \left[ x=2 , y=1 \right]  , \left[ x=1 , y=2 \right]    \right] 
 %image% EMT4aljabar_23030630002-040.png
% // latex: 2
% Ekspresi simbolik dapat memiliki tanda, yang menunjukkan perlakuan
% khusus di Maxima. Beberapa tanda dapat digunakan sebagai perintah
% juga, yang lainnya tidak. Tanda ditambahkan dengan "|" (bentuk yang
% lebih baik dari "ev(...,flags)")
>$& diff((x^3-1)/(x+1),x) //turunan bentuk pecahan
 %image% EMT4aljabar_23030630002-041.png
% // latex: \frac{3\,x^2}{x+1}-\frac{x^3-1}{\left(x+1\right)^2}
>$& diff((x^3-1)/(x+1),x) | ratsimp //menyederhanakan pecahan
 %image% EMT4aljabar_23030630002-042.png
% // latex: \frac{2\,x^3+3\,x^2+1}{x^2+2\,x+1}
>$&factor(%)
 %image% EMT4aljabar_23030630002-043.png
% // latex: \frac{2\,x^3+3\,x^2+1}{\left(x+1\right)^2}
% ** Contoh soal
%% 1. Tentukan hasil dari
%% latex: C(13,2) = \frac{13!}{11! \cdot 2!}
% %image% EMT4aljabar_23030630002-044.png
% // latex: C(13,2) = \frac{13!}{11! \cdot 2!}
>$binomial(13,2) // hasil c(13,2) dengan menggunakan binomial
 %image% EMT4aljabar_23030630002-045.png
% // latex: 78
% 2. Tentukan hasil dari
%% latex: C(52,4) = \frac{48!}{11! \cdot 4!}
>$binomial(52,4) // hasil c(52,4) dengan menggunakan binomial
 %image% EMT4aljabar_23030630002-046.png
% // latex: 270725
% 3. Tentukan faktor dari
%% latex: x^2+12x+36
>$&solve(x^2+12*x+36,x)
 %image% EMT4aljabar_23030630002-047.png
% // latex: \left[ x=-6 \right] 
% 4. Tentukan faktor dari
%% latex: x^3-4x^2+5x-20
>$&solve(x^3-4*x^2+5*x-20,x)
 %image% EMT4aljabar_23030630002-048.png
% // latex: \left[ x=-\sqrt{5}\,i , x=\sqrt{5}\,i , x=4 \right] 
% 5. Tentukan faktor dari
%% latex: x^2-x+\frac{1}{4}
>$&solve(x^2-x+(1/4),x)
 %image% EMT4aljabar_23030630002-049.png
% // latex: \left[ x=\frac{1}{2} \right] 
% * Fungsi
% 
% Dalam EMT, fungsi adalah program yang didefinisikan dengan perintah
% "function". Fungsi ini dapat berupa fungsi satu baris atau fungsi
% multibaris.
%% Fungsi satu baris dapat berupa numerik atau simbolik. Fungsi satu
% baris numerik didefinisikan oleh ":=".
>function f(x) := x*sqrt(x^2+1)
% Sebagai gambaran umum, kami tampilkan semua definisi yang mungkin
% untuk fungsi satu baris. Suatu fungsi dapat dievaluasi seperti fungsi
% Euler bawaan lainnya.
>f(2)
4.472135955
% Fungsi ini juga akan bekerja untuk vektor, mematuhi bahasa matriks
% Euler, karena ekspresi yang digunakan dalam fungsi tersebut
% divektorkan.
>f(0:0.1:1)
[0,  0.100499,  0.203961,  0.313209,  0.430813,  0.559017,  0.699714,
0.854459,  1.0245,  1.21083,  1.41421]
% Fungsi dapat diplot. Alih-alih ekspresi, kita hanya perlu memberikan
% nama fungsi.
% 
% Berbeda dengan ekspresi simbolik atau numerik, nama fungsi harus
% diberikan dalam bentuk string.
>solve("f",1,y=1)
0.786151377757
% Secara default, jika Anda perlu menimpa fungsi bawaan, Anda harus
% menambahkan kata kunci "overwrite". Menimpa fungsi bawaan berbahaya
% dan dapat menyebabkan masalah bagi fungsi lain yang bergantung
% padanya.
% 
% Anda masih dapat memanggil fungsi bawaan sebagai "_...", jika itu
% adalah fungsi di inti Euler.
>function overwrite sin (x) := _sin(x°) // redine sine in degrees
>sin(45)
0.707106781187
% Sebaiknya kita hilangkan pendefinisian ulang dari sin.
>forget sin; sin(pi/4)
0.707106781187
% ** Contoh soal
%% 1. Tentukan h(6) dari fungsi
%% latex: h(x)=4x^2+3x+8
>function h(x) := 4*x^2+3*x+8
>h(6)
170
% 2. Tentukan nilai h(25) dari fungsi h(x)
>h(25)
2583
% 3. Tentukan nilai b(654) dari fungsi
%% latex: b(x)=3x^2-2x+5
>function b(x) := 3*x^2-2*x+5
>b(625)
1170630
% ** Default Parameters
% 
% Fungsi numerik dapat memiliki parameter default.
>function f(x,a=1) := a*x^2
% Mengabaikan parameter ini akan menggunakan nilai default.
>f(4)
16
% Dengan menyettingnya akan menimpa/menutupi nilai default.
>f(4,5)
80
% Parameter yang ditetapkan juga akan menimpanya. Ini digunakan oleh
% banyak fungsi Euler seperti plot2d, plot3d.
>f(4,a=1)
16
% Jika suatu variabel bukan parameter, maka variabel tersebut harus
% bersifat global. Fungsi satu baris dapat melihat variabel global.
>function f(x) := a*x^2
>a=6; f(2)
24
% Namun, parameter yang ditetapkan akan menggantikan nilai global.
% 
% Jika argumen tidak ada dalam daftar parameter yang telah ditetapkan
% sebelumnya, argumen tersebut harus dideklarasikan dengan ":="!
>f(2,a:=5)
20
% Fungsi simbolik didefinisikan dengan "&=". Fungsi ini didefinisikan
% dalam Euler dan Maxima, dan berfungsi di keduanya. Ekspresi yang
% mendefinisikan dijalankan melalui Maxima sebelum definisi.
>function g(x) &= x^3-x*exp(-x); $&g(x)
 %image% EMT4aljabar_23030630002-050.png
% // latex: x^3-x\,e^ {- x }
% Fungsi simbolik dapat digunakan dalam ekspresi simbolik.
>$&diff(g(x),x), $&% with x=4/3
 %image% EMT4aljabar_23030630002-051.png
% // latex: x\,e^ {- x }-e^ {- x }+3\,x^2
 %image% EMT4aljabar_23030630002-052.png
% // latex: \frac{e^ {- \frac{4}{3} }}{3}+\frac{16}{3}
% Mereka juga dapat digunakan dalam ekspresi numerik. Tentu saja, ini
% hanya akan berfungsi jika EMT dapat menginterpretasikan semua hal di
% dalam fungsi tersebut.
>g(5+g(1))
178.635099908
% Mereka dapat digunakan untuk mendefinisikan fungsi atau ekspresi
% simbolis lainnya.
>function G(x) &= factor(integrate(g(x),x)); $&G(c) // integrate: mengintegralkan
 %image% EMT4aljabar_23030630002-053.png
% // latex: \frac{e^ {- c }\,\left(c^4\,e^{c}+4\,c+4\right)}{4}
>
>solve(&g(x),0.5)
0.703467422498
% Berikut ini juga berfungsi, karena Euler menggunakan ekspresi simbolik
% dalam fungsi g, jika tidak menemukan variabel simbolik g, dan 
%% jika ada fungsi simbolik g.
>solve(&g,0.5)
0.703467422498
>function P(x,n) &= (2*x-1)^n; $&P(x,n)
 %image% EMT4aljabar_23030630002-054.png
% // latex: \left(2\,x-1\right)^{n}
>function Q(x,n) &= (x+2)^n; $&Q(x,n)
 %image% EMT4aljabar_23030630002-055.png
% // latex: \left(x+2\right)^{n}
>$&P(x,4), $&expand(%)
 %image% EMT4aljabar_23030630002-056.png
% // latex: \left(2\,x-1\right)^4
 %image% EMT4aljabar_23030630002-057.png
% // latex: 16\,x^4-32\,x^3+24\,x^2-8\,x+1
>P(3,4)
625
>$&P(x,4)+ Q(x,3), $&expand(%)
 %image% EMT4aljabar_23030630002-058.png
% // latex: \left(2\,x-1\right)^4+\left(x+2\right)^3
 %image% EMT4aljabar_23030630002-059.png
% // latex: 16\,x^4-31\,x^3+30\,x^2+4\,x+9
>$&P(x,4)-Q(x,3), $&expand(%), $&factor(%)
 %image% EMT4aljabar_23030630002-060.png
% // latex: \left(2\,x-1\right)^4-\left(x+2\right)^3
 %image% EMT4aljabar_23030630002-061.png
% // latex: 16\,x^4-33\,x^3+18\,x^2-20\,x-7
 %image% EMT4aljabar_23030630002-062.png
% // latex: 16\,x^4-33\,x^3+18\,x^2-20\,x-7
>$&P(x,4)*Q(x,3), $&expand(%), $&factor(%)
 %image% EMT4aljabar_23030630002-063.png
% // latex: \left(x+2\right)^3\,\left(2\,x-1\right)^4
 %image% EMT4aljabar_23030630002-064.png
% // latex: 16\,x^7+64\,x^6+24\,x^5-120\,x^4-15\,x^3+102\,x^2-52\,x+8
 %image% EMT4aljabar_23030630002-065.png
% // latex: \left(x+2\right)^3\,\left(2\,x-1\right)^4
>$&P(x,4)/Q(x,1), $&expand(%), $&factor(%)
 %image% EMT4aljabar_23030630002-066.png
% // latex: \frac{\left(2\,x-1\right)^4}{x+2}
 %image% EMT4aljabar_23030630002-067.png
% // latex: \frac{16\,x^4}{x+2}-\frac{32\,x^3}{x+2}+\frac{24\,x^2}{x+2}-\frac{8  \,x}{x+2}+\frac{1}{x+2}
 %image% EMT4aljabar_23030630002-068.png
% // latex: \frac{\left(2\,x-1\right)^4}{x+2}
>function f(x) &= x^3-x; $&f(x)
 %image% EMT4aljabar_23030630002-069.png
% // latex: x^3-x
% Dengan &= fungsinya bersifat simbolis, dan dapat digunakan dalam
% ekspresi simbolis lainnya.
>$&integrate(f(x),x)
 %image% EMT4aljabar_23030630002-070.png
% // latex: \frac{x^4}{4}-\frac{x^2}{2}
% Dengan := fungsinya adalah numerik. Contoh yang bagus adalah integral
% tentu seperti
% 
% latex: f(x) = \int_1^x t^t \, dt,
% %image% EMT4aljabar_23030630002-071.png
% // latex: f(x) = \int_1^x t^t \, dt,
% 
% yang tidak bisa dievalusi secara simbolis.
% 
% Jika kita mendefinisikan ulang fungsi tersebut dengan kata kunci
% "map", fungsi tersebut dapat digunakan untuk vektor x. Secara
% internal, fungsi
%% tersebut dipanggil untuk semua nilai x satu kali, dan hasilnya
% disimpan dalam sebuah vektor.
>function map f(x) := integrate("x^x",1,x)
>f(0:0.5:2)
[-0.783431,  -0.410816,  0,  0.676863,  2.05045]
% Fungsi dapat memiliki nilai default untuk parameter.
>function mylog (x,base=10) := ln(x)/ln(base);
% Sekarang fungsi tersebut dapat dipanggil dengan atau tanpa parameter
% "base".
>mylog(100), mylog(2^6.7,2)
2
6.7
% Selain itu, dimungkinkan untuk menggunakan parameter yang ditetapkan.
>mylog(E^2,base=E)
2
% Sering kali, kita ingin menggunakan fungsi untuk vektor di satu
% tempat, dan untuk elemen individual di tempat lain. Hal ini
% dimungkinkandengan parameter vektor.
>function f([a,b]) &= a^2+b^2-a*b+b; $&f(a,b), $&f(x,y)
 %image% EMT4aljabar_23030630002-072.png
% // latex: b^2-a\,b+b+a^2
 %image% EMT4aljabar_23030630002-073.png
% // latex: y^2-x\,y+y+x^2
% Fungsi simbolik semacam itu dapat digunakan untuk variabel simbolik.
% 
% Namun, fungsi tersebut juga dapat digunakan untuk vektor numerik.
>v=[3,4]; f(v)
17
% Ada pula fungsi yang murni simbolis, yang tidak dapat digunakan secara
% numerik.
>function lapl(expr,x,y) &&= diff(expr,x,2)+diff(expr,y,2)//turunan parsial kedua

                 diff(expr, y, 2) + diff(expr, x, 2)

>$&realpart((x+I*y)^4), $&lapl(%,x,y)
 %image% EMT4aljabar_23030630002-074.png
% // latex: y^4-6\,x^2\,y^2+x^4
 %image% EMT4aljabar_23030630002-075.png
% // latex: 0
% Namun tentu saja, mereka dapat digunakan dalam ekspresi simbolik atau
% dalam definisi fungsi simbolik.
>function f(x,y) &= factor(lapl((x+y^2)^5,x,y)); $&f(x,y)
 %image% EMT4aljabar_23030630002-076.png
% // latex: 10\,\left(y^2+x\right)^3\,\left(9\,y^2+x+2\right)
% Ringkasan
% 
% - &= mendefinisikan fungsi simbolik,
%% - := mendefinisikan fungsi numerik,
%% - &&= mendefinisikan fungsi simbolik murni.
% 
% ** Contoh soal
%% Diketahui dua fungsi yaitu S(x) dan T(x)
% 
% latex: S(x)= (2x+5)^n
%% latex: T(x)= (7x+4)^n
>function S(x,n) &= (2*x+5)^n; $&S(x,n)
 %image% EMT4aljabar_23030630002-077.png
% // latex: \left(2\,x+5\right)^{n}
>function T(x,n) &= (7*x+4)^n; $&T(x,n)
 %image% EMT4aljabar_23030630002-078.png
% // latex: \left(7\,x+4\right)^{n}
% 1. Berapa hasil S(x) dengan n=2 ditambah T(x) dengan n=3
>$&S(x,2)+ T(x,3), $&expand(%)
 %image% EMT4aljabar_23030630002-079.png
% // latex: \left(7\,x+4\right)^3+\left(2\,x+5\right)^2
 %image% EMT4aljabar_23030630002-080.png
% // latex: 343\,x^3+592\,x^2+356\,x+89
% 2. Berapa hasil S(x) dengan n=2 ditambah T(x) dengan n=3 dengan x=2
>$&S(2,2)+ T(2,3)
 %image% EMT4aljabar_23030630002-081.png
% // latex: 5913
% 3. Berapa hasil S(x) dengan n=2 dikali T(x) dengan n=3 dan factornya
>$&S(x,2)* T(x,3); $&expand(%), $&factor(%)
 %image% EMT4aljabar_23030630002-082.png
% // latex: 1372\,x^5+9212\,x^4+21679\,x^3+21676\,x^2+9680\,x+1600
 %image% EMT4aljabar_23030630002-083.png
% // latex: \left(2\,x+5\right)^2\,\left(7\,x+4\right)^3
% 4. Berapa hasil T(x) dengan n=4
>$&T(x,4), $&expand(%)
 %image% EMT4aljabar_23030630002-084.png
% // latex: \left(7\,x+4\right)^4
 %image% EMT4aljabar_23030630002-085.png
% // latex: 2401\,x^4+5488\,x^3+4704\,x^2+1792\,x+256
% 5. Tentukan integral dari T(x) dengan n=2
>$&integrate(T(x,2),x)
 %image% EMT4aljabar_23030630002-086.png
% // latex: \frac{49\,x^3}{3}+28\,x^2+16\,x
% * Memecahkan Ekspresi
% 
% Ekspresi dapat diselesaikan secara numerik dan simbolik.
% 
% Untuk menyelesaikan ekspresi sederhana dari satu variabel, kita dapat
% menggunakan fungsi solve(). Fungsi ini memerlukan nilai awal untuk
% memulai pencarian. Secara internal, solve() menggunakan metode secant.
>solve("x^2-2",1)
1.41421356237
% Ini juga berlaku untuk ekspresi simbolik. Ambil fungsi berikut.
>$&solve(x^2=2,x)
 %image% EMT4aljabar_23030630002-087.png
% // latex: \left[ x=-\sqrt{2} , x=\sqrt{2} \right] 
>$&solve(x^2-2,x)
 %image% EMT4aljabar_23030630002-088.png
% // latex: \left[ x=-\sqrt{2} , x=\sqrt{2} \right] 
>$&solve(a*x^2+b*x+c=0,x)
 %image% EMT4aljabar_23030630002-089.png
% // latex: \left[ x=\frac{-\sqrt{b^2-4\,a\,c}-b}{2\,a} , x=\frac{\sqrt{b^2-4\,  a\,c}-b}{2\,a} \right] 
>$&solve([a*x+b*y=c,d*x+e*y=f],[x,y])
 %image% EMT4aljabar_23030630002-090.png
% // latex: \left[ \left[ x=-\frac{c\,e}{b\,\left(d-5\right)-a\,e} , y=\frac{c  \,\left(d-5\right)}{b\,\left(d-5\right)-a\,e} \right]  \right] 
>
>
>px &= 4*x^8+x^7-x^4-x; $&px
 %image% EMT4aljabar_23030630002-091.png
% // latex: 4\,x^8+x^7-x^4-x
% Sekarang kita cari titik, di mana polinomialnya adalah 2. Dalam
% solve(), nilai target default y=0 dapat diubah dengan variabel yang
% ditetapkan.
%% Kita gunakan y=2 dan periksa dengan mengevaluasi polinomial pada hasil
% sebelumnya.
>solve(px,1,y=2), px(%)
0.966715594851
2
% Memecahkan ekspresi simbolik dalam bentuk simbolik akan menghasilkan
% daftar solusi. Kami menggunakan pemecah simbolik solve() yang
% disediakan oleh Maxima.
>sol &= solve(x^2-x-1,x); $&sol
 %image% EMT4aljabar_23030630002-092.png
% // latex: \left[ x=\frac{1-\sqrt{5}}{2} , x=\frac{\sqrt{5}+1}{2} \right] 
% Cara termudah untuk mendapatkan nilai numerik adalah dengan
% mengevaluasi solusi secara numerik seperti sebuah ekspresi.
>longest sol()
    -0.6180339887498949       1.618033988749895 
% Untuk menggunakan solusi secara simbolis dalam ekspresi lain, cara
% termudah adalah menggunakan "with".
>$&x^2 with sol[1], $&expand(x^2-x-1 with sol[2])
 %image% EMT4aljabar_23030630002-093.png
% // latex: \frac{\left(\sqrt{5}-1\right)^2}{4}
 %image% EMT4aljabar_23030630002-094.png
% // latex: 0
% Memecahkan sistem persamaan secara simbolis dapat dilakukan dengan
% vektor persamaan dan penyelesai simbolis solve(). Jawabannya adalah
% daftar persamaan.
>$&solve([x+y=2,x^3+2*y+x=4],[x,y])
 %image% EMT4aljabar_23030630002-095.png
% // latex: \left[ \left[ x=-1 , y=3 \right]  , \left[ x=1 , y=1 \right]  ,   \left[ x=0 , y=2 \right]  \right] 
% Fungsi f() dapat melihat variabel global. Namun, sering kali kita
% ingin menggunakan parameter lokal.
% 
% latex: a^x-x^a = 0.1
% 
% dengan a=3.
>function f(x,a) := x^a-a^x;
% Salah satu cara untuk meneruskan parameter tambahan ke f() adalah
% dengan menggunakan daftar dengan nama fungsi dan parameter (cara
% lainnya adalah parameter titik koma).
>solve({{"f",3}},2,y=0.1)
2.54116291558
% Ini juga berlaku untuk ekspresi. Namun, elemen daftar bernama harus
% digunakan. (Informasi lebih lanjut tentang daftar dalam tutorial
% tentang sintaks EMT).
>solve({{"x^a-a^x",a=3}},2,y=0.1)
2.54116291558
% ** Contoh soal
% 
% 1. Tentukan nilai x dari
%% latex: x^2+3x-28=0
>$&solve(x^2+3*x-28,x)
 %image% EMT4aljabar_23030630002-096.png
% // latex: \left[ x=4 , x=-7 \right] 
% 2. Tentukan nilai y dari
%% latex: y^2+6y+9=0
>$&solve(y^2+6*y+9,y)
 %image% EMT4aljabar_23030630002-097.png
% // latex: \left[ y=-3 \right] 
% 3. Tentukan nilai n dari
%% latex: n^2+4n+4=0
>$&solve(n^2+4*n+4,n)
 %image% EMT4aljabar_23030630002-098.png
% // latex: \left[ n=-2 \right] 
% 4. Tentukan nilai x dari
%% latex: x^2+100=20x
>$&solve(x^2-20*x+100,x)
 %image% EMT4aljabar_23030630002-099.png
% // latex: \left[ x=10 \right] 
% 5. tentukan nilai a dari
%% latex: 12a^2-28=5a
>$&solve(12*a^2-5*a-28,a)
 %image% EMT4aljabar_23030630002-100.png
% // latex: \left[ a=-\frac{4}{3} , a=\frac{7}{4} \right] 
% * Menyelesaikan Pertidaksamaan
% 
% Untuk menyelesaikan pertidaksamaan, EMT tidak akan dapat melakukannya,
% melainkan dengan bantuan Maxima, artinya secara eksak (simbolik).
% Perintah Maxima yang digunakan adalah fourier_elim(), yang harus
% dipanggil dengan perintah "load(fourier_elim)" terlebih dahulu.
>&load(fourier_elim)

        C:/Program Files/Euler x64/maxima/share/maxima/5.35.1/share/f\
ourier_elim/fourier_elim.lisp

>$&fourier_elim([x^2 - 1>0],[x]) // x^2-1 > 0
 %image% EMT4aljabar_23030630002-101.png
% // latex: \left[ 1<x \right] \lor \left[ x<-1 \right] 
>$&fourier_elim([x^2 - 1<0],[x]) // x^2-1 < 0
 %image% EMT4aljabar_23030630002-102.png
% // latex: \left[ -1<x , x<1 \right] 
>$&fourier_elim([x^2 - 1 # 0],[x]) // x^-1 <> 0
 %image% EMT4aljabar_23030630002-103.png
% // latex: \left[ -1<x , x<1 \right] \lor \left[ 1<x \right] \lor \left[ x<-1   \right] 
>$&fourier_elim([x # 6],[x])
 %image% EMT4aljabar_23030630002-104.png
% // latex: \left[ x<6 \right] \lor \left[ 6<x \right] 
% Ketika himpunan penyelesaiannya adalah kosong maka hasilnya 'emptyset'
% dan ketika himpunan penyelesaiannya adalah semua bilangan reak maka
% hasilnya 'universalset'; sebagai contoh
>$&fourier_elim([x < 1, x > 1],[x]) // tidak memiliki penyelesaian
 %image% EMT4aljabar_23030630002-105.png
% // latex: {\it emptyset}
>$&fourier_elim([minf < x, x < inf],[x]) // solusinya R
 %image% EMT4aljabar_23030630002-106.png
% // latex: {\it universalset}
>$&fourier_elim([x^3 - 1 > 0],[x])
 %image% EMT4aljabar_23030630002-107.png
% // latex: \left[ 1<x , x^2+x+1>0 \right] \lor \left[ x<1 , -x^2-x-1>0   \right] 
>$&fourier_elim([cos(x) < 1/2],[x]) // ??? gagal
 %image% EMT4aljabar_23030630002-108.png
% // latex: \left[ 1-2\,\cos x>0 \right] 
>
>$&fourier_elim([y-x < 5, x - y < 7, 10 < y],[x,y]) // sistem pertidaksamaan
 %image% EMT4aljabar_23030630002-109.png
% // latex: \left[ y-5<x , x<y+7 , 10<y \right] 
>$&fourier_elim([y-x < 5, x - y < 7, 10 < y],[y,x])
 %image% EMT4aljabar_23030630002-110.png
% // latex: \left[ {\it max}\left(10 , x-7\right)<y , y<x+5 , 5<x \right] 
>$&fourier_elim((x + y < 5) and (x - y >8),[x,y])
 %image% EMT4aljabar_23030630002-111.png
% // latex: \left[ y+8<x , x<5-y , y<-\frac{3}{2} \right] 
>$&fourier_elim(((x + y < 5) and x < 1) or  (x - y >8),[x,y])
 %image% EMT4aljabar_23030630002-112.png
% // latex: \left[ y+8<x \right] \lor \left[ x<{\it min}\left(1 , 5-y\right)   \right] 
>&fourier_elim([max(x,y) > 6, x # 8, abs(y-1) > 12],[x,y])

        [6 < x, x < 8, y < - 11] or [8 < x, y < - 11]
 or [x < 8, 13 < y] or [x = y, 13 < y] or [8 < x, x < y, 13 < y]
 or [y < x, 13 < y]

>$&fourier_elim([(x+6)/(x-9) <= 6],[x])
 %image% EMT4aljabar_23030630002-113.png
% // latex: \left[ x=12 \right] \lor \left[ 12<x \right] \lor \left[ x<9   \right] 
% ** Contoh soal
%% 1. tentukan nilai x dari pertidaksamaan
%% latex: 2y-3\geq 1-y+5
>&load(fourier_elim)

        C:/Program Files/Euler x64/maxima/share/maxima/5.35.1/share/f\
ourier_elim/fourier_elim.lisp

>$&fourier_elim([2*y-3>=1-y+5],[x])
 %image% EMT4aljabar_23030630002-114.png
% // latex: \left[ y-3 \right] \lor \left[ y-3>0 \right] 
% 2. Tentukan nilai x dari pertidaksamaan
%% latex: (x-2)(x+5)>x(x-3)
>$&fourier_elim([(x-2)*(x+5)>x*(x-3)],[x])
 %image% EMT4aljabar_23030630002-115.png
% // latex: \left[ \frac{5}{3}<x \right] 
% 3. Tentukan nilai x dari pertidaksamaan
%% latex: x+6 \geq 7
>$&fourier_elim([x+6>=7],[x])
 %image% EMT4aljabar_23030630002-116.png
% // latex: \left[ x=1 \right] \lor \left[ 1<x \right] 
% 4. Tentukan nilai x dari pertidaksamaan
%% latex: x+\frac{1}{4}\leq \frac{2}{3}
>$&fourier_elim([x+(1/4)<=(2/3)],[x])
 %image% EMT4aljabar_23030630002-117.png
% // latex: \left[ x=\frac{5}{12} \right] \lor \left[ x<\frac{5}{12} \right] 
% * Bahasa Matriks
% 
% Dokumentasi inti EMT berisi pembahasan terperinci tentang bahasa
% matriks Euler.
% 
% Vektor dan matriks dimasukkan dengan tanda kurung siku, elemen
% dipisahkan dengan koma, baris dipisahkan dengan titik koma.
>A=[1,2;3,4]
            1             2 
            3             4 
% Produk matriks dilambangkan dengan sebuah titik.
>b=[3;4]
            3 
            4 
>b' // transpose b
[3,  4]
>inv(A) //inverse A
           -2             1 
          1.5          -0.5 
>A.b //perkalian matriks
           11 
           25 
>A.inv(A)
            1             0 
            0             1 
% Poin utama dari bahasa matriks adalah bahwa semua fungsi dan operator
% bekerja secara elemen demi elemen.
>A.A
            7            10 
           15            22 
>A^2 //perpangkatan elemen2 A
            1             4 
            9            16 
>A.A.A
           37            54 
           81           118 
>power(A,3) //perpangkatan matriks
           37            54 
           81           118 
>A/A //pembagian elemen-elemen matriks yang seletak
            1             1 
            1             1 
>A/b //pembagian elemen2 A oleh elemen2 b kolom demi kolom (karena b vektor kolom)
     0.333333      0.666667 
         0.75             1 
>A\b // hasilkali invers A dan b, A^(-1)b 
           -2 
          2.5 
>inv(A).b
           -2 
          2.5 
>A\A   //A^(-1)A
            1             0 
            0             1 
>inv(A).A
            1             0 
            0             1 
>A*A //perkalin elemen-elemen matriks seletak
            1             4 
            9            16 
% Ini bukan hasil perkalian matriks, tetapi perkalian elemen demi
% elemen. Hal yang sama berlaku untuk vektor.
>b^2 // perpangkatan elemen-elemen matriks/vektor
            9 
           16 
% Jika salah satu operan merupakan vektor atau skalar, ia diekspansi
% dengan cara alami.
>2*A
            2             4 
            6             8 
% Misalnya, jika operan adalah vektor kolom maka elemen-elemennya
% diterapkan ke semua baris A.
>[1,2]*A
            1             4 
            3             8 
% Jika itu adalah vektor baris maka diterapkan ke semua kolom A.
>A*[2,3]
            2             6 
            6            12 
% Seseorang dapat membayangkan perkalian ini seolah-olah vektor baris v
% telah diduplikasi untuk membentuk matriks berukuran sama dengan A.
>dup([1,2],2) // dup: menduplikasi/menggandakan vektor [1,2] sebanyak 2 kali (baris)
            1             2 
            1             2 
>A*dup([1,2],2) 
            1             4 
            3             8 
% Hal ini juga berlaku untuk dua vektor, yang satu merupakan vektor
% baris dan yang lainnya merupakan vektor kolom. Kita menghitung i*j
% untuk i,j dari 1 hingga 5. Caranya adalah dengan mengalikan 1:5 dengan
% transposenya. Bahasa matriks Euler secara otomatis menghasilkan tabel
% nilai.
>(1:5)*(1:5)' // hasilkali elemen-elemen vektor baris dan vektor kolom
            1             2             3             4             5 
            2             4             6             8            10 
            3             6             9            12            15 
            4             8            12            16            20 
            5            10            15            20            25 
% Sekali lagi, ingatlah bahwa ini bukan produk matriks!
>(1:5).(1:5)' // hasilkali vektor baris dan vektor kolom
55
>sum((1:5)*(1:5)) // sama hasilnya
55
% Bahkan operator seperti < atau == bekerja dengan cara yang sama.
>(1:10)<6 // menguji elemen-elemen yang kurang dari 6
[1,  1,  1,  1,  1,  0,  0,  0,  0,  0]
% Misalnya, kita dapat menghitung jumlah elemen yang memenuhi kondisi
% tertentu dengan fungsi sum().
>sum((1:10)<6) // banyak elemen yang kurang dari 6
5
% Euler memiliki operator perbandingan, seperti "==", yang memeriksa
% kesetaraan.
% 
% Kita memperoleh vektor 0 dan 1, di mana 1 berarti benar.
>t=(1:10)^2; t==25 //menguji elemen2 t yang sama dengan 25 (hanya ada 1)
[0,  0,  0,  0,  1,  0,  0,  0,  0,  0]
% Dari vektor tersebut, "nonzeros" memilih elemen yang bukan nol.
% 
% Dalam kasus ini, kita memperoleh indeks semua elemen yang lebih besar
% dari 50.
>nonzeros(t>50) //indeks elemen2 t yang lebih besar daripada 50
[8,  9,  10]
% Tentu saja, kita dapat menggunakan vektor indeks ini untuk mendapatkan
% nilai yang sesuai dalam t.
>t[nonzeros(t>50)] //elemen2 t yang lebih besar daripada 50
[64,  81,  100]
% Sebagai contoh, mari kita cari semua kuadrat angka 1 hingga 1000,
% yaitu 5 modulo 11 dan 3 modulo 13.
>t=1:1000; nonzeros(mod(t^2,11)==5 && mod(t^2,13)==3)
[4,  48,  95,  139,  147,  191,  238,  282,  290,  334,  381,  425,
433,  477,  524,  568,  576,  620,  667,  711,  719,  763,  810,  854,
862,  906,  953,  997]
% EMT tidak sepenuhnya efektif untuk komputasi integer. Ia menggunakan
% floating point presisi ganda secara internal. Namun, ia sering kali
% sangat berguna.
% 
% Kita dapat memeriksa keutamaan. Mari kita cari tahu, berapa banyak
% kuadrat ditambah 1 yang merupakan bilangan prima.
>t=1:1000; length(nonzeros(isprime(t^2+1)))
112
% Fungsi nonzeros() hanya berfungsi untuk vektor. Untuk matriks, ada
% mnonzeros().
>seed(2); A=random(3,4)
     0.765761      0.401188      0.406347      0.267829 
      0.13673      0.390567      0.495975      0.952814 
     0.548138      0.006085      0.444255      0.539246 
% Ia mengembalikan indeks elemen, yang bukan nol.
>k=mnonzeros(A<0.4) //indeks elemen2 A yang kurang dari 0,4
            1             4 
            2             1 
            2             2 
            3             2 
% Indeks ini dapat digunakan untuk menetapkan elemen pada nilai
% tertentu.
>mset(A,k,0) //mengganti elemen2 suatu matriks pada indeks tertentu
     0.765761      0.401188      0.406347             0 
            0             0      0.495975      0.952814 
     0.548138             0      0.444255      0.539246 
% Fungsi mset() juga dapat mengatur elemen pada indeks ke entri matriks
% lainnya.
>mset(A,k,-random(size(A)))
     0.765761      0.401188      0.406347     -0.126917 
    -0.122404     -0.691673      0.495975      0.952814 
     0.548138     -0.483902      0.444255      0.539246 
% Dan mungkin untuk mendapatkan elemen elemen dalam sebuah vektor.
>mget(A,k)
[0.267829,  0.13673,  0.390567,  0.006085]
% Fungsi lain yang berguna adalah extrema, yang mengembalikan nilai
% minimal dan maksimal di setiap baris matriks dan posisinya.
>ex=extrema(A)
     0.267829             4      0.765761             1 
      0.13673             1      0.952814             4 
     0.006085             2      0.548138             1 
% Kita dapat menggunakan ini untuk mengekstrak nilai maksimal pada
% setiap baris.
>ex[,3]'
[0.765761,  0.952814,  0.548138]
% Ini tentu saja sama dengan fungsi max().
>max(A)'
[0.765761,  0.952814,  0.548138]
% Tetapi dengan mget(), kita dapat mengekstrak indeks dan menggunakan
% informasi ini untuk mengekstrak elemen pada posisi yang sama dari
% matriks lain.
>j=(1:rows(A))'|ex[,4], mget(-A,j)
            1             1 
            2             4 
            3             1 
[-0.765761,  -0.952814,  -0.548138]
% ** Contoh soal
% 
% 1. Tentukan invers dari matriks
%% latex: A=[3,2;5,3]
>A=[3,2;5,3]
            3             2 
            5             3 
>inv(A) // invers dari A
           -3             2 
            5            -3 
% 2. Tentukan invers dari matriks B berikut
>B=[3,1,0;1,1,1;1,-1,2]
            3             1             0 
            1             1             1 
            1            -1             2 
>inv(B) // invers dari matriks B
        0.375         -0.25         0.125 
       -0.125          0.75        -0.375 
        -0.25           0.5          0.25 
% 3. Berapa hasil dari perkalian matriks P dan matriks Q
>P=[-2,4;5,1;-1,-3]
           -2             4 
            5             1 
           -1            -3 
>Q=[3,-6;-1,4]
            3            -6 
           -1             4 
>P.Q // mengalikan matriks P dan Q
          -10            28 
           14           -26 
            0            -6 
% 4. Berapa hasil dari matriks Q kuadrat
>Q.Q // menghitung matriks Q kuadrat
           15           -42 
           -7            22 
% 5. Berapa hasil kuadrat dari masing masing elemen pada matriks B
>B^2
            9             1             0 
            1             1             1 
            1             1             4 
% 
% * Fungsi Matriks Lainnya (Membangun Matriks)
% 
% Untuk membuat matriks, kita dapat menumpuk satu matriks di atas
% matriks lainnya. Jika keduanya tidak memiliki jumlah kolom yang sama,
% matriks yang lebih pendek akan diisi dengan 0.
>v=1:3; v_v
            1             2             3 
            1             2             3 
% Dengan cara yang sama, kita dapat menempelkan suatu matriks ke sisi
% lain yang berdampingan, jika keduanya memiliki jumlah baris yang sama.
>A=random(3,4); A|v'
     0.032444     0.0534171      0.595713      0.564454             1 
      0.83916      0.175552      0.396988       0.83514             2 
    0.0257573      0.658585      0.629832      0.770895             3 
% Jika tidak memiliki jumlah baris yang sama, matriks yang lebih pendek
% diisi dengan 0.
% 
% Ada pengecualian untuk aturan ini. Bilangan riil yang dilampirkan ke
% matriks akan digunakan sebagai kolom yang diisi dengan bilangan riil
% tersebut.
>A|1
     0.032444     0.0534171      0.595713      0.564454             1 
      0.83916      0.175552      0.396988       0.83514             1 
    0.0257573      0.658585      0.629832      0.770895             1 
% Dimungkinkan untuk membuat matriks dari vektor baris dan kolom
>[v;v]
            1             2             3 
            1             2             3 
>[v',v']
            1             1 
            2             2 
            3             3 
% Tujuan utama dari ini adalah untuk menafsirkan vektor ekspresi untuk
% vektor kolom.
>"[x,x^2]"(v')
            1             1 
            2             4 
            3             9 
% Untuk mendapatkan ukuran A, kita dapat menggunakan fungsi berikut.
>C=zeros(2,4); rows(C), cols(C), size(C), length(C)
2
4
[2,  4]
4
% Untuk vektor, ada length().
>length(2:10)
9
% Ada banyak fungsi lain yang menghasilkan matriks.
>ones(2,2)
            1             1 
            1             1 
% Ini juga dapat digunakan dengan satu parameter. Untuk mendapatkan
% vektor dengan angka selain 1, gunakan yang berikut ini.
>ones(5)*6
[6,  6,  6,  6,  6]
% Matriks bilangan acak juga dapat dihasilkan dengan acak (distribusi
% seragam) atau normal (distribusi Gauß).
>random(2,2)
      0.66566      0.831835 
        0.977      0.544258 
% Berikut adalah fungsi berguna lainnya, yang merestrukturisasi
% elemen-elemen suatu matriks menjadi matriks lain.
>redim(1:9,3,3) // menyusun elemen2 1, 2, 3, ..., 9 ke bentuk matriks 3x3
            1             2             3 
            4             5             6 
            7             8             9 
% Dengan fungsi berikut, kita dapat menggunakan ini dan fungsi dup untuk
% menulis fungsi rep(), yang mengulang vektor n kali.
>function rep(v,n) := redim(dup(v,n),1,n*cols(v))
% Mari kita coba.
>rep(1:3,5)
[1,  2,  3,  1,  2,  3,  1,  2,  3,  1,  2,  3,  1,  2,  3]
% Fungsi multdup() menduplikasi elemen suatu vektor.
>multdup(1:3,5), multdup(1:3,[2,3,2])
[1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3]
[1,  1,  2,  2,  2,  3,  3]
% Fungsi flipx() dan flipy() membalikkan urutan baris atau kolom
% matriks. Yaitu, fungsi flipx() membalik secara horizontal.
>flipx(1:5) //membalik elemen2 vektor baris
[5,  4,  3,  2,  1]
% Untuk rotasi, Euler memiliki rotleft() dan rotright().
>rotleft(1:5) // memutar elemen2 vektor baris
[2,  3,  4,  5,  1]
% Fungsi khusus adalah drop(v,i), yang menghapus elemen dengan indeks di
% i dari vektor v.
>drop(10:20,3)
[10,  11,  13,  14,  15,  16,  17,  18,  19,  20]
% Perhatikan bahwa vektor i dalam drop(v,i) merujuk pada indeks elemen
% dalam v, bukan nilai elemen. Jika Anda ingin menghapus elemen, Anda
% perlu menemukan elemen terlebih dahulu. Fungsi indexof(v,x) dapat
% digunakan untuk menemukan elemen x dalam vektor v yang diurutkan.
>v=primes(50), i=indexof(v,10:20), drop(v,i)
[2,  3,  5,  7,  11,  13,  17,  19,  23,  29,  31,  37,  41,  43,  47]
[0,  5,  0,  6,  0,  0,  0,  7,  0,  8,  0]
[2,  3,  5,  7,  23,  29,  31,  37,  41,  43,  47]
% Seperti yang Anda lihat, tidak ada salahnya menyertakan indeks di luar
% rentang (seperti 0), indeks ganda, atau indeks yang tidak diurutkan.
>drop(1:10,shuffle([0,0,5,5,7,12,12]))
[1,  2,  3,  4,  6,  8,  9,  10]
% Ada beberapa fungsi khusus untuk mengatur diagonal atau membuat
% matriks diagonal.
% 
% Kita mulai dengan matriks identitas.
>A=id(5) // matriks identitas 5x5
            1             0             0             0             0 
            0             1             0             0             0 
            0             0             1             0             0 
            0             0             0             1             0 
            0             0             0             0             1 
% Kemudian kita atur diagonal bawah (-1) menjadi 1:4.
>setdiag(A,-1,1:4) //mengganti diagonal di bawah diagonal utama
            1             0             0             0             0 
            1             1             0             0             0 
            0             2             1             0             0 
            0             0             3             1             0 
            0             0             0             4             1 
% Perhatikan bahwa kita tidak mengubah matriks A. Kita mendapatkan
% matriks baru sebagai hasil dari setdiag().
% 
% Berikut ini adalah fungsi yang mengembalikan matriks tri-diagonal.
>function tridiag (n,a,b,c) := setdiag(setdiag(b*id(n),1,c),-1,a); ...
>tridiag(5,1,2,3)
            2             3             0             0             0 
            1             2             3             0             0 
            0             1             2             3             0 
            0             0             1             2             3 
            0             0             0             1             2 
% Diagonal matriks juga dapat diekstraksi dari matriks. Untuk
% menunjukkan hal ini, kami merubah struktur vektor 1:9 menjadi matriks
% 3x3.
>A=redim(1:9,3,3)
            1             2             3 
            4             5             6 
            7             8             9 
% Sekarang kita dapat mengekstrak diagonalnya.
>d=getdiag(A,0)
[1,  5,  9]
% Misalnya, kita dapat membagi matriks berdasarkan diagonalnya. Bahasa
% matriks memastikan bahwa vektor kolom d diterapkan ke matriks baris
% demi baris.
>fraction A/d'
        1         2         3 
      4/5         1       6/5 
      7/9       8/9         1 
% ** Contoh soal
% 
% 1. Buatlah matriks identitas berukuran 4x4
>A=id(4)
            1             0             0             0 
            0             1             0             0 
            0             0             1             0 
            0             0             0             1 
% 2. Ubahlah elemen dibawah elemen diagonal utama matriks identitas 4x4
% dengan 8
>setdiag(A,-1,8)
            1             0             0             0 
            8             1             0             0 
            0             8             1             0 
            0             0             8             1 
% 3. Susunlah elemen elemen 1,2,3,4,5,6 ke bentuk matriks berukuran 3X2
>redim(1:6,3,2)
            1             2 
            3             4 
            5             6 
% * Vektorisasi
% 
% Hampir semua fungsi di Euler juga berfungsi untuk input matriks dan
% vektor, jika ini masuk akal.
% 
% Misalnya, fungsi sqrt() menghitung akar kuadrat dari semua elemen
% vektor atau matriks.
>sqrt(1:3)
[1,  1.41421,  1.73205]
% Jadi Anda dapat dengan mudah membuat tabel nilai. Ini adalah salah
% satu cara untuk memplot fungsi (alternatifnya menggunakan ekspresi).
>x=1:0.01:5; y=log(x)/x^2; // terlalu panjang untuk ditampikan
% Dengan ini dan operator titik dua a:delta:b, vektor nilai fungsi dapat
% dibuat dengan mudah.
% 
% Dalam contoh berikut, kita buat vektor nilai t[i] dengan spasi 0,1
% dari -1 hingga 1. Kemudian kita buat vektor nilai fungsi
% 
% latex: s = t^3-t
>t=-1:0.1:1; s=t^3-t
[0,  0.171,  0.288,  0.357,  0.384,  0.375,  0.336,  0.273,  0.192,
0.099,  0,  -0.099,  -0.192,  -0.273,  -0.336,  -0.375,  -0.384,
-0.357,  -0.288,  -0.171,  0]
% EMT mengembangkan operator untuk skalar, vektor, dan matriks dengan
% cara yang jelas.
% 
% Misalnya, vektor kolom dikalikan vektor baris akan mengembang menjadi
% matriks, jika operator diterapkan. Berikut ini, v' adalah vektor yang
% ditransposisikan (vektor kolom).
>shortest (1:5)*(1:5)'
     1      2      3      4      5 
     2      4      6      8     10 
     3      6      9     12     15 
     4      8     12     16     20 
     5     10     15     20     25 
% Perhatikan bahwa ini sangat berbeda dari perkalian matriks. Perkalian
% matriks dilambangkan dengan titik "." dalam EMT.
>(1:5).(1:5)'
55
% Secara default, vektor baris dicetak dalam format ringkas.
>[1,2,3,4]
[1,  2,  3,  4]
% Untuk matriks, operator khusus . menunjukkan perkalian matriks, dan A'
% menunjukkan transposisi. Matriks 1x1 dapat digunakan seperti bilangan
% riil.
>v:=[1,2]; v.v', %^2
5
25
% Untuk mentranspos suatu matriks, kita menggunakan tanda apostrof.
>v=1:4; v'
            1 
            2 
            3 
            4 
% Jadi kita dapat menghitung matriks A dikali vektor b.
>A=[1,2,3,4;5,6,7,8]; A.v'
           30 
           70 
% Perhatikan bahwa v masih merupakan vektor baris. Jadi v'.v berbeda
% dari v.v'.
>v'.v
            1             2             3             4 
            2             4             6             8 
            3             6             9            12 
            4             8            12            16 
% v.v' menghitung norma v kuadrat untuk vektor baris v. Hasilnya adalah
% vektor 1x1, yang bekerja seperti bilangan riil.
>v.v'
30
% Ada juga norma fungsi (bersama dengan banyak fungsi Aljabar Linear
% lainnya).
>norm(v)^2
30
% Operator dan fungsi mematuhi bahasa matriks Euler.
% 
% Berikut ini ringkasan aturannya.
% 
% - Fungsi yang diterapkan pada vektor atau matriks diterapkan pada
% setiap elemen.
% 
% - Operator yang beroperasi pada dua matriks dengan ukuran yang sama
% diterapkan secara berpasangan pada elemen-elemen matriks.
% 
% - Jika kedua matriks memiliki dimensi yang berbeda, keduanya
% diekspansi dengan cara yang masuk akal, sehingga memiliki ukuran yang
% sama.
% 
% Misalnya, nilai skalar dikalikan vektor mengalikan nilai dengan setiap
% elemen vektor. Atau matriks dikalikan vektor (dengan *, bukan .)
% mengekspansi vektor ke ukuran matriks dengan menduplikasinya.
% 
% Berikut ini adalah kasus sederhana dengan operator ^.
>[1,2,3]^2
[1,  4,  9]
% Berikut ini adalah kasus yang lebih rumit. Vektor baris dikalikan
% vektor kolom, keduanya diekspansi dengan cara menduplikasi.
>v:=[1,2,3]; v*v'
            1             2             3 
            2             4             6 
            3             6             9 
% Perhatikan bahwa produk skalar menggunakan produk matriks, bukan *!
>v.v'
14
% Ada banyak fungsi untuk matriks. Kami memberikan daftar singkatnya.
% Anda harus merujuk ke dokumentasi untuk informasi lebih lanjut tentang
% perintah-perintah ini.
% 
%  sum,prod menghitung jumlah dan hasil perkalian baris-baris
%%  cumsum,cumprod melakukan hal yang sama secara kumulatif
%%  menghitung nilai ekstrem dari setiap baris
%%  extrema mengembalikan vektor dengan informasi ekstrem
%%  diag(A,i) mengembalikan diagonal ke-i
%%  setdiag(A,i,v) menetapkan diagonal ke-i
%%  id(n) matriks identitas
%%  det(A) determinan
%%  charpoly(A) polinomial karakteristik
%%  eigenvalues(A) nilai eigen
>v*v, sum(v*v), cumsum(v*v)
[1,  4,  9]
14
[1,  5,  14]
% Operator : menghasilkan vektor baris dengan spasi yang sama, secara
% opsional dengan ukuran langkah.
>1:4, 1:2:10
[1,  2,  3,  4]
[1,  3,  5,  7,  9]
% Untuk menggabungkan matriks dan vektor ada operator "|" dan "_".
>[1,2,3]|[4,5], [1,2,3]_1
[1,  2,  3,  4,  5]
            1             2             3 
            1             1             1 
% Elemen-elemen suatu matriks disebut dengan "A[i,j]".
>A:=[1,2,3;4,5,6;7,8,9]; A[2,3]
6
% Untuk vektor baris atau kolom, v[i] adalah elemen ke-i dari vektor.
% Untuk matriks, ini mengembalikan baris ke-i lengkap dari matriks.
>v:=[2,4,6,8]; v[3], A[3]
6
[7,  8,  9]
% Indeks juga dapat berupa vektor baris indeks. : menunjukkan semua
% indeks.
>v[1:2], A[:,2]
[2,  4]
            2 
            5 
            8 
% Bentuk singkat dari : adalah menghilangkan indeks sepenuhnya.
>A[,2:3]
            2             3 
            5             6 
            8             9 
% Untuk tujuan vektorisasi, elemen-elemen matriks dapat diakses
% seolah-olah mereka adalah vektor.
>A{4}
4
% Matriks juga dapat diratakan, menggunakan fungsi redim(). Hal ini
% diimplementasikan dalam fungsi flatten().
>redim(A,1,prod(size(A))), flatten(A)
[1,  2,  3,  4,  5,  6,  7,  8,  9]
[1,  2,  3,  4,  5,  6,  7,  8,  9]
% Untuk menggunakan matriks pada tabel, mari kita atur ulang ke format
% default, dan hitung tabel nilai sinus dan cosinus. Perhatikan bahwa
% sudut dalam radian secara default.
>defformat; w=0°:45°:360°; w=w'; deg(w)
            0 
           45 
           90 
          135 
          180 
          225 
          270 
          315 
          360 
% Sekarang kita tambahkan kolom ke matriks.
>M = deg(w)|w|cos(w)|sin(w)
            0             0             1             0 
           45      0.785398      0.707107      0.707107 
           90        1.5708             0             1 
          135       2.35619     -0.707107      0.707107 
          180       3.14159            -1             0 
          225       3.92699     -0.707107     -0.707107 
          270       4.71239             0            -1 
          315       5.49779      0.707107     -0.707107 
          360       6.28319             1             0 
% 
% Dengan menggunakan bahasa matriks, kita dapat membuat beberapa tabel
% dari beberapa fungsi sekaligus.
% 
% Dalam contoh berikut, kita menghitung t[j]^i untuk i dari 1 hingga n.
% Kita memperoleh matriks, di mana setiap baris adalah tabel t^i untuk
% satu i. Yaitu, matriks tersebut memiliki elemen-elemen 
%% latex: a_{i,j} = t_j^i, \quad 1 \le j \le 101, \quad 1 \le i \le n
% 
% Fungsi yang tidak berfungsi untuk input vektor harus "divektorkan".
% Ini dapat dicapai dengan kata kunci "map" dalam definisi fungsi.
% Kemudian fungsi akan dievaluasi untuk setiap elemen parameter vektor.
% 
% Integrasi numerik integr() hanya berfungsi untuk batas interval
% skalar. Jadi, kita perlu memvektorkannya.
>function map f(x) := integrate("x^x",1,x)
% Kata kunci "map" akan memvektorkan fungsi tersebut. Fungsi tersebut
% sekarang akan berfungsi untuk vektor angka.
>f([1:5])
[0,  2.05045,  13.7251,  113.336,  1241.03]
% ** Contoh soal
% 
% 1. Butlah matriks yang berisi hasil dari perkalian 6x6
>shortest (1:6)*(1:6)'
     1      2      3      4      5      6 
     2      4      6      8     10     12 
     3      6      9     12     15     18 
     4      8     12     16     20     24 
     5     10     15     20     25     30 
     6     12     18     24     30     36 
% 2. Transpose kan matriks berikut
>S=[9,4,3;4,1,3;0,5,7]
            9             4             3 
            4             1             3 
            0             5             7 
>S' // transpose dari matriks S
            9             4             0 
            4             1             5 
            3             3             7 
% 3. Diketahui matriks D=[2,3,4;6,7,8;4,5,6]. Tentukan hasil dari
% 
% latex: (D.D')^2
>D:=[2,3,4;6,7,8;4,5,6]; D.D'; %^2
          841          4225          2209 
         4225         22201         11449 
         2209         11449          5929 
>
% * Sub-Matriks dan Elemen Matriks
% 
% Untuk mengakses elemen matriks, gunakan notasi tanda kurung.
>A=[1,2,3;4,5,6;7,8,9], A[2,2]
            1             2             3 
            4             5             6 
            7             8             9 
5
% Kita dapat mengakses baris matriks yang lengkap.
>A[2]
[4,  5,  6]
% Dalam kasus vektor baris atau kolom, ini mengembalikan elemen vektor.
>v=1:3; v[2]
2
% Untuk memastikan, Anda mendapatkan baris pertama untuk matriks 1xn dan
% mxn, tentukan semua kolom menggunakan indeks kedua yang kosong.
>A[2,]
[4,  5,  6]
% Jika indeks adalah vektor indeks, Euler akan mengembalikan baris
% matriks yang sesuai.
% 
% Di sini kita menginginkan baris pertama dan kedua dari A.
>A[[1,2]]
            1             2             3 
            4             5             6 
% Kita bahkan dapat menyusun ulang A menggunakan vektor indeks. Untuk
% lebih tepatnya, kita tidak mengubah A di sini, tetapi menghitung versi
% A yang telah disusun ulang.
>A[[3,2,1]]
            7             8             9 
            4             5             6 
            1             2             3 
% Trik indeks juga berfungsi dengan kolom.
% 
% Contoh ini memilih semua baris A dan kolom kedua dan ketiga.
>A[1:3,2:3]
            2             3 
            5             6 
            8             9 
% Untuk singkatan ":" menunjukkan semua indeks baris atau kolom.
>A[:,3]
            3 
            6 
            9 
% Atau, biarkan indeks pertama kosong.
>A[,2:3]
            2             3 
            5             6 
            8             9 
% Kita juga bisa mendapatkan baris terakhir A.
>A[-1]
[7,  8,  9]
% Sekarang mari kita ubah elemen A dengan menetapkan submatriks A ke
% suatu nilai. Hal ini sebenarnya mengubah matriks A yang tersimpan.
>A[1,1]=4
            4             2             3 
            4             5             6 
            7             8             9 
% Kita juga dapat menetapkan nilai ke baris A.
>A[1]=[-1,-1,-1]
           -1            -1            -1 
            4             5             6 
            7             8             9 
% Kita bahkan dapat menetapkannya ke submatriks jika ukurannya tepat.
>A[1:2,1:2]=[5,6;7,8]
            5             6            -1 
            7             8             6 
            7             8             9 
% Selain itu, beberapa jalan pintas diperbolehkan.
>A[1:2,1:2]=0
            0             0            -1 
            0             0             6 
            7             8             9 
% Peringatan: Indeks yang tidak sesuai batas akan mengembalikan matriks
% kosong, atau pesan kesalahan, tergantung pada pengaturan sistem. Pesan
% kesalahan adalah standar. Namun, perlu diingat bahwa indeks negatif
% dapat digunakan untuk mengakses elemen matriks yang dihitung dari
% akhir.
>A[4]
Row index 4 out of bounds!
Error in:
A[4] ...
    ^
% ** Contoh soal
% 
% Diketahui sebuah matriks
% 
% latex: A=[9,8,7;6,5,4;3,2,1]
>A=[9,8,7;6,5,4;3,2,1]
            9             8             7 
            6             5             4 
            3             2             1 
% 1. Apa elemen baris ke 3 kolom ke 1 dari matriks diatas?
>A[3,1]
3
% 2. Apa saja elemen elemen yang ada di baris pertama?
>A[1,]
[9,  8,  7]
% 3. Apa saja elemen elemen yang ada di kolom kedua?
>A[,2]
            8 
            5 
            2 
% 4. Tukarkan baris ke 1 dan ke 3 dalam matriks A
>A[[3,2,1]]
            3             2             1 
            6             5             4 
            9             8             7 
% * Sorting and Shuffling
% 
% Fungsi sort() mengurutkan vektor baris.
>sort([5,6,4,8,1,9])
[1,  4,  5,  6,  8,  9]
% Seringkali perlu untuk mengetahui indeks vektor yang diurutkan dalam
% vektor asli. Ini dapat digunakan untuk menyusun ulang vektor lain
% dengan cara yang sama.
% 
% Mari kita acak sebuah vektor.
>v=shuffle(1:10)
[4,  5,  10,  6,  8,  9,  1,  7,  2,  3]
% Indeks berisi urutan v yang tepat.
>{vs,ind}=sort(v); v[ind]
[1,  2,  3,  4,  5,  6,  7,  8,  9,  10]
% Ini juga berlaku untuk vektor string.
>s=["a","d","e","a","aa","e"]
a
d
e
a
aa
e
>{ss,ind}=sort(s); ss
a
a
aa
d
e
e
% Seperti yang Anda lihat, posisi entri ganda agak acak.
>ind
[4,  1,  5,  2,  6,  3]
% Fungsi unik mengembalikan daftar yang diurutkan dari elemen unik suatu
% vektor.
>intrandom(1,10,10), unique(%)
[4,  4,  9,  2,  6,  5,  10,  6,  5,  1]
[1,  2,  4,  5,  6,  9,  10]
% Ini juga berlaku untuk vektor string.
>unique(s)
a
aa
d
e
% * Aljabar Linear
% 
% EMT memiliki banyak fungsi untuk memecahkan sistem linear, sistem
% sparse, atau masalah regresi.
% 
% Untuk sistem linear Ax=b, Anda dapat menggunakan algoritma Gauss,
% matriks invers, atau kecocokan linear. Operator A\b menggunakan versi
% algoritma Gauss.
>A=[1,2;3,4]; b=[5;6]; A\b
           -4 
          4.5 
% Untuk contoh lain, kita buat matriks 200x200 dan jumlah barisnya.
% Kemudian kita selesaikan Ax=b menggunakan matriks invers. Kita ukur
% kesalahan sebagai deviasi maksimal semua elemen dari 1, yang tentu
% saja merupakan solusi yang benar.
>A=normal(200,200); b=sum(A); longest totalmax(abs(inv(A).b-1))
  8.790745908981989e-13 
% Jika sistem tidak mempunyai solusi, penyesuaian linier meminimalkan
% norma kesalahan Ax-b.
>A=[1,2,3;4,5,6;7,8,9]
            1             2             3 
            4             5             6 
            7             8             9 
% Determinan matriks ini adalah 0.
>det(A)
0
% * Symbolic Matrices
% 
% Maxima memiliki matriks simbolik. Tentu saja, Maxima dapat digunakan
% untuk masalah aljabar linear sederhana tersebut. Kita dapat
% mendefinisikan matriks untuk Euler dan Maxima dengan &:=, lalu
% menggunakannya dalam ekspresi simbolik. Bentuk [...] yang biasa
% digunakan untuk mendefinisikan matriks dapat digunakan dalam Euler
% untuk mendefinisikan matriks simbolik.
>A &= [a,1,1;1,a,1;1,1,a]; $A
 %image% EMT4aljabar_23030630002-118.png
% // latex: \begin{pmatrix}a & 1 & 1 \\ 1 & a & 1 \\ 1 & 1 & a \\ \end{pmatrix}
>$&det(A), $&factor(%)
 %image% EMT4aljabar_23030630002-119.png
% // latex: a\,\left(a^2-1\right)-2\,a+2
 %image% EMT4aljabar_23030630002-120.png
% // latex: \left(a-1\right)^2\,\left(a+2\right)
>$&invert(A) with a=0
 %image% EMT4aljabar_23030630002-121.png
% // latex: \begin{pmatrix}-\frac{1}{2} & \frac{1}{2} & \frac{1}{2} \\ \frac{1  }{2} & -\frac{1}{2} & \frac{1}{2} \\ \frac{1}{2} & \frac{1}{2} & -  \frac{1}{2} \\ \end{pmatrix}
>A &= [1,a;b,2]; $A
 %image% EMT4aljabar_23030630002-122.png
% // latex: \begin{pmatrix}1 & a \\ b & 2 \\ \end{pmatrix}
% Seperti semua variabel simbolik, matriks ini dapat digunakan dalam
% ekspresi simbolik lainnya.
>$&det(A-x*ident(2)), $&solve(%,x)
 %image% EMT4aljabar_23030630002-123.png
% // latex: \left(1-x\right)\,\left(2-x\right)-a\,b
 %image% EMT4aljabar_23030630002-124.png
% // latex: \left[ x=\frac{3-\sqrt{4\,a\,b+1}}{2} , x=\frac{\sqrt{4\,a\,b+1}+3  }{2} \right] 
% Nilai eigen juga dapat dihitung secara otomatis. Hasilnya adalah
% vektor dengan dua vektor nilai eigen dan multiplisitas.
>$&eigenvalues([a,1;1,a])
 %image% EMT4aljabar_23030630002-125.png
% // latex: \left[ \left[ a-1 , a+1 \right]  , \left[ 1 , 1 \right]  \right] 
% Untuk mengekstrak vektor eigen tertentu dibutuhkan pengindeksan yang
% cermat.
>$&eigenvectors([a,1;1,a]), &%[2][1][1]
 %image% EMT4aljabar_23030630002-126.png
% // latex: \left[ \left[ \left[ a-1 , a+1 \right]  , \left[ 1 , 1 \right]    \right]  , \left[ \left[ \left[ 1 , -1 \right]  \right]  , \left[   \left[ 1 , 1 \right]  \right]  \right]  \right] 

                               [1, - 1]

% Matriks simbolik dapat dievaluasi dalam Euler secara numerik seperti
% ekspresi simbolik lainnya.
>A(a=4,b=5)
            1             4 
            5             2 
% Dalam ekspresi simbolik, gunakan dengan.
>$&A with [a=4,b=5]
 %image% EMT4aljabar_23030630002-127.png
% // latex: \begin{pmatrix}1 & 4 \\ 5 & 2 \\ \end{pmatrix}
% Akses terhadap baris matriks simbolik bekerja seperti halnya matriks
% numerik.
>$&A[1]
 %image% EMT4aljabar_23030630002-128.png
% // latex: \left[ 1 , a \right] 
% Ekspresi simbolik dapat berisi sebuah penugasan. Dan itu mengubah
% matriks A.
>&A[1,1]:=t+1; $&A
 %image% EMT4aljabar_23030630002-129.png
% // latex: \begin{pmatrix}t+1 & a \\ b & 2 \\ \end{pmatrix}
% Maxima memiliki fungsi simbolis untuk membuat vektor dan matriks.
% Untuk itu, lihat dokumentasi Maxima atau tutorial tentang Maxima di
% EMT.
>v &= makelist(1/(i+j),i,1,3); $v
 %image% EMT4aljabar_23030630002-130.png
% // latex: \left[ \frac{1}{j+1} , \frac{1}{j+2} , \frac{1}{j+3} \right] 
%  
>B &:= [1,2;3,4]; $B, $&invert(B)
 %image% EMT4aljabar_23030630002-131.png
% // latex: \begin{pmatrix}1 & 2 \\ 3 & 4 \\ \end{pmatrix}
 %image% EMT4aljabar_23030630002-132.png
% // latex: \begin{pmatrix}-2 & 1 \\ \frac{3}{2} & -\frac{1}{2} \\   \end{pmatrix}
% Hasilnya dapat dievaluasi secara numerik di Euler. Untuk informasi
% lebih lanjut tentang Maxima, lihat pengantar Maxima.
>$&invert(B)()
           -2             1 
          1.5          -0.5 
% Euler juga memiliki fungsi xinv() yang hebat, yang melakukan upaya
% lebih besar dan mendapatkan hasil yang lebih tepat.
% 
% Perlu dicatat, bahwa dengan &:= matriks B telah didefinisikan sebagai
% simbolik dalam ekspresi simbolik dan sebagai numerik dalam ekspresi
% numerik. Jadi kita dapat menggunakannya di sini.
>longest B.xinv(B)
                      1                       0 
                      0                       1 
% Misalnya nilai eigen A dapat dihitung secara numerik.
>A=[1,2,3;4,5,6;7,8,9]; real(eigenvalues(A))
[16.1168,  -1.11684,  0]
% Atau secara simbolis. Lihat tutorial tentang Maxima untuk detailnya.
>$&eigenvalues(@A)
 %image% EMT4aljabar_23030630002-133.png
% // latex: \left[ \left[ \frac{15-3\,\sqrt{33}}{2} , \frac{3\,\sqrt{33}+15}{2}   , 0 \right]  , \left[ 1 , 1 , 1 \right]  \right] 
% ** Contoh soal
% 
% 1. Tentukan determinan dari matriks berikut
>A &= [1,-5,-8;6,4,-2;-3,0,7]; $A
 %image% EMT4aljabar_23030630002-134.png
% // latex: \begin{pmatrix}1 & -5 & -8 \\ 6 & 4 & -2 \\ -3 & 0 & 7 \\   \end{pmatrix}
>$&det(A)
 %image% EMT4aljabar_23030630002-135.png
% // latex: 112
% 2. Tentukan determinan matriks G
>G &= [1,-6,0;-3,2,0;0,5,9]; $G
 %image% EMT4aljabar_23030630002-136.png
% // latex: \begin{pmatrix}1 & -6 & 0 \\ -3 & 2 & 0 \\ 0 & 5 & 9 \\   \end{pmatrix}
>$&det(G)
 %image% EMT4aljabar_23030630002-137.png
% // latex: -144
% 3. Tentukan determinan dari matriks berikut
>D &= [-8]; $D
 %image% EMT4aljabar_23030630002-138.png
% // latex: \left[ -8 \right] 
>$&det(D)
 %image% EMT4aljabar_23030630002-139.png
% // latex: -8
% 4. Tentukan determinan dari matriks L
>L &= [5,a,6;9,a,4;a,5,1]; $L
 %image% EMT4aljabar_23030630002-140.png
% // latex: \begin{pmatrix}5 & a & 6 \\ 9 & a & 4 \\ a & 5 & 1 \\ \end{pmatrix}
>$&det(L), $factor(%)
 %image% EMT4aljabar_23030630002-141.png
% // latex: 6\,\left(45-a^2\right)-\left(9-4\,a\right)\,a+5\,\left(a-20\right)
 %image% EMT4aljabar_23030630002-142.png
% // latex: -2\,\left(a^2+2\,a-85\right)
% * Nilai Numerik dalam Ekspresi Simbolik
% 
% Ekspresi simbolik hanyalah string yang berisi ekspresi. Jika kita
% ingin menentukan nilai untuk ekspresi simbolik dan ekspresi numerik,
% kita harus menggunakan "&:=".
>A &:= [1,pi;4,5]
            1       3.14159 
            4             5 
% Masih terdapat perbedaan antara bentuk numerik dan bentuk simbolik.
% Saat mengubah matriks ke bentuk simbolik, pendekatan pecahan untuk
% bilangan riil akan digunakan.
>$&A
 %image% EMT4aljabar_23030630002-143.png
% // latex: \begin{pmatrix}1 & \frac{1146408}{364913} \\ 4 & 5 \\ \end{pmatrix}
% Untuk menghindari hal ini, ada fungsi "mxmset(variabel)".
>mxmset(A); $&A
 %image% EMT4aljabar_23030630002-144.png
% // latex: \begin{pmatrix}1 & 3.141592653589793 \\ 4 & 5 \\ \end{pmatrix}
% Maxima juga dapat melakukan komputasi dengan angka floating point, dan
% bahkan dengan angka floating point besar dengan 32 digit. Namun,
% evaluasinya jauh lebih lambat.
>$&bfloat(sqrt(2)), $&float(sqrt(2))
 %image% EMT4aljabar_23030630002-145.png
% // latex: 1.4142135623730950488016887242097_B \times 10^{0}
 %image% EMT4aljabar_23030630002-146.png
% // latex: 1.414213562373095
% Ketepatan angka floating point besar dapat diubah.
>&fpprec:=100; &bfloat(pi)

        3.14159265358979323846264338327950288419716939937510582097494\
4592307816406286208998628034825342117068b0

% Variabel numerik dapat digunakan dalam ekspresi simbolik apa pun
% menggunakan "@var".
% 
% Perlu dicatat bahwa ini hanya diperlukan jika variabel telah
% didefinisikan dengan ":=" atau "=" sebagai variabel numerik.
>B:=[1,pi;3,4]; $&det(@B)
 %image% EMT4aljabar_23030630002-147.png
% // latex: -5.424777960769379
% 
% * Demo - Interest Rates
% 
% Di bawah ini, kami menggunakan Euler Math Toolbox (EMT) untuk
% menghitung suku bunga. Kami melakukannya secara numerik dan simbolis
% untuk menunjukkan kepada Anda bagaimana Euler dapat digunakan untuk
% memecahkan masalah kehidupan nyata.
% 
% Asumsikan Anda memiliki modal awal sebesar 5000 (misalnya dalam
% dolar).
>K=5000
5000
% Sekarang kita asumsikan suku bunga 3% per tahun. Mari kita tambahkan
% satu suku bunga sederhana dan hitung hasilnya.
>K*1.03
5150
% Euler juga akan memahami sintaksis berikut.
>K+K*3%
5150
% Namun lebih mudah menggunakan faktor.
>q=1+3%, K*q
1.03
5150
% Selama 10 tahun, kita cukup mengalikan faktor-faktornya dan
% mendapatkan nilai akhir dengan suku bunga majemuk.
>K*q^10
6719.58189672
% Untuk keperluan kita, kita dapat mengatur format menjadi 2 digit
% setelah titik desimal.
>format(12,2); K*q^10
    6719.58 
% Mari kita cetak angka tersebut dibulatkan menjadi 2 digit dalam
% kalimat lengkap.
>"Starting from " + K + "$ you get " + round(K*q^10,2) + "$."
Starting from 5000$ you get 6719.58$.
% Bagaimana jika kita ingin mengetahui hasil antara dari tahun 1 hingga
% tahun 9? Untuk ini, bahasa matriks Euler sangat membantu. Anda tidak
% perlu menulis loop, tetapi cukup masukkan.
>K*q^(0:10)
Real 1 x 11 matrix

    5000.00     5150.00     5304.50     5463.64     ...
% Bagaimana keajaiban ini bekerja? Pertama, ekspresi 0:10 menghasilkan
% vektor bilangan bulat.
>short 0:10
[0,  1,  2,  3,  4,  5,  6,  7,  8,  9,  10]
% Maka semua operator dan fungsi di Euler dapat diaplikasikan ke vektor
% elemen demi elemen. Jadi
>short q^(0:10)
[1,  1.03,  1.0609,  1.0927,  1.1255,  1.1593,  1.1941,  1.2299,
1.2668,  1.3048,  1.3439]
% adalah vektor faktor q^0 hingga q^10. Ini dikalikan dengan K, dan kita
% memperoleh vektor nilai.
>VK=K*q^(0:10);
% Tentu saja, cara realistis untuk menghitung suku bunga ini adalah
% dengan membulatkannya ke sen terdekat setelah setiap tahun. Mari kita
% tambahkan fungsi untuk ini.
>function oneyear (K) := round(K*q,2)
% Mari kita bandingkan kedua hasil, dengan dan tanpa pembulatan.
>longest oneyear(1234.57), longest 1234.57*q
                1271.61 
              1271.6071 
% Sekarang tidak ada rumus sederhana untuk tahun ke-n, dan kita harus
% mengulangnya selama bertahun-tahun. Euler menyediakan banyak solusi
% untuk ini.
% 
% Cara termudah adalah fungsi iterate, yang mengulang fungsi yang
% diberikan beberapa kali.
>VKr=iterate("oneyear",5000,10)
Real 1 x 11 matrix

    5000.00     5150.00     5304.50     5463.64     ...
% Kita dapat mencetaknya dengan cara yang ramah, menggunakan format kami
% dengan tempat desimal tetap.
>VKr'
    5000.00 
    5150.00 
    5304.50 
    5463.64 
    5627.55 
    5796.38 
    5970.27 
    6149.38 
    6333.86 
    6523.88 
    6719.60 
% Untuk mendapatkan elemen vektor tertentu, kita menggunakan indeks
% dalam tanda kurung siku.
>VKr[2], VKr[1:3]
    5150.00 
    5000.00     5150.00     5304.50 
% Anehnya, kita juga dapat menggunakan vektor indeks. Ingat bahwa 1:3
% menghasilkan vektor [1,2,3].
% 
% Mari kita bandingkan elemen terakhir dari nilai yang dibulatkan dengan
% nilai penuh.
>VKr[-1], VK[-1]
    6719.60 
    6719.58 
% Perbedaannya sangat kecil.
% 
% * Memecahkan Persamaan
% 
% Sekarang kita ambil fungsi yang lebih maju, yang menambahkan jumlah
% uang tertentu setiap tahun.
>function onepay (K) := K*q+R
% Kita tidak perlu menentukan q atau R untuk definisi fungsi. Hanya jika
% kita menjalankan perintah, kita harus menentukan nilai-nilai ini. Kita
% pilih R=200.
>R=200; iterate("onepay",5000,10)
Real 1 x 11 matrix

    5000.00     5350.00     5710.50     6081.82     ...
% Bagaimana jika kita menghilangkan jumlah yang sama setiap tahun?
>R=-200; iterate("onepay",5000,10)
Real 1 x 11 matrix

    5000.00     4950.00     4898.50     4845.45     ...
% Kita melihat bahwa uang berkurang. Jelas, jika kita hanya memperoleh
% bunga sebesar 150 pada tahun pertama, tetapi mengurangi 200, kita akan
% kehilangan uang setiap tahun.
% 
% Bagaimana kita dapat menentukan berapa tahun uang tersebut akan
% bertahan? Kita harus menulis sebuah loop untuk ini. Cara termudah
% adalah dengan melakukan iterasi yang cukup lama.
>VKR=iterate("onepay",5000,50)
Real 1 x 51 matrix

    5000.00     4950.00     4898.50     4845.45     ...
% Dengan menggunakan bahasa matriks, kita dapat menentukan nilai negatif
% pertama dengan cara berikut.
>min(nonzeros(VKR<0))
      48.00 
% Alasannya adalah nonzeros(VKR<0) mengembalikan vektor indeks i, di
% mana VKR[i]<0, dan min menghitung indeks minimal.
% 
% Karena vektor selalu dimulai dengan indeks 1, jawabannya adalah 47
% tahun.
% 
% Fungsi iterate() memiliki satu trik lagi. Fungsi ini dapat mengambil
% kondisi akhir sebagai argumen. Kemudian, fungsi ini akan mengembalikan
% nilai dan jumlah iterasi.
>{x,n}=iterate("onepay",5000,till="x<0"); x, n,
     -19.83 
      47.00 
% Mari kita coba menjawab pertanyaan yang lebih ambigu. Asumsikan kita
% tahu bahwa nilainya adalah 0 setelah 50 tahun. Berapa tingkat
% bunganya?
% 
% Ini adalah pertanyaan yang hanya dapat dijawab secara numerik. Di
% bawah ini, kita akan memperoleh rumus yang diperlukan. Kemudian Anda
% akan melihat bahwa tidak ada rumus yang mudah untuk tingkat bunga.
% Namun untuk saat ini, kita bertujuan untuk mencari solusi numerik.
% 
% Langkah pertama adalah mendefinisikan fungsi yang melakukan iterasi
% sebanyak n kali. Kita menambahkan semua parameter ke fungsi ini.
>function f(K,R,P,n) := iterate("x*(1+P/100)+R",K,n;P,R)[-1]
% Iterasinya sama seperti di atas
% 
% latex: x_{n+1} = x_n \cdot \left(1+ \frac{P}{100}\right) + R
% 
% Namun, kita tidak lagi menggunakan nilai global R dalam ekspresi kita.
% Fungsi seperti iterate() memiliki trik khusus di Euler. Anda dapat
% meneruskan nilai variabel dalam ekspresi sebagai parameter titik koma.
% Dalam kasus ini, P dan R.
% 
% Selain itu, kita hanya tertarik pada nilai terakhir. Jadi, kita ambil
% indeks [-1].
% 
% Mari kita coba uji coba.
>f(5000,-200,3,47)
     -19.83 
% Sekarang kita bisa memecahkan masalah kita.
>solve("f(5000,-200,x,50)",3)
       3.15 
% Rutin solve menyelesaikan ekspresi=0 untuk variabel x. Jawabannya
% adalah 3,15% per tahun. Kita ambil nilai awal 3% untuk algoritma
% tersebut. Fungsi solve() selalu membutuhkan nilai awal.
% 
% Kita dapat menggunakan fungsi yang sama untuk menyelesaikan pertanyaan
% berikut: Berapa banyak yang dapat kita hapus per tahun sehingga modal
% awal habis setelah 20 tahun dengan asumsi suku bunga 3% per tahun.
>solve("f(5000,x,3,20)",-200)
    -336.08 
% Perhatikan bahwa Anda tidak dapat menghitung jumlah tahun, karena
% fungsi kami mengasumsikan n sebagai nilai integer.
% 
% ** Solusi Simbolis untuk Masalah Suku Bunga
% 
% Kita dapat menggunakan bagian simbolik Euler untuk mempelajari masalah
% ini. Pertama, kita mendefinisikan fungsi onepay() secara simbolis.
>function op(K) &= K*q+R; $&op(K)
 %image% EMT4aljabar_23030630002-148.png
% // latex: R+q\,K
% Sekarang kita dapat mengulanginya.
>$&op(op(op(op(K)))), $&expand(%)
 %image% EMT4aljabar_23030630002-149.png
% // latex: q\,\left(q\,\left(q\,\left(R+q\,K\right)+R\right)+R\right)+R
 %image% EMT4aljabar_23030630002-150.png
% // latex: q^3\,R+q^2\,R+q\,R+R+q^4\,K
% Kita melihat suatu pola. Setelah n periode kita memiliki
% 
% latex: K_n = q^n K + R (1+q+\ldots+q^{n-1}) = q^n K + \frac{q^n-1}{q-1} R
% 
% Rumus tersebut adalah rumus jumlah geometri yang diketahui oleh
% Maxima.
>&sum(q^k,k,0,n-1); $& % = ev(%,simpsum)
 %image% EMT4aljabar_23030630002-151.png
% // latex: \sum_{k=0}^{n-1}{q^{k}}=\frac{q^{n}-1}{q-1}
% Ini agak rumit. Jumlahnya dievaluasi dengan tanda "simpsum" untuk
% mereduksinya menjadi hasil bagi.
% 
% Mari kita buat fungsi untuk ini.
>function fs(K,R,P,n) &= (1+P/100)^n*K + ((1+P/100)^n-1)/(P/100)*R; $&fs(K,R,P,n)
 %image% EMT4aljabar_23030630002-152.png
% // latex: \frac{100\,\left(\left(\frac{P}{100}+1\right)^{n}-1\right)\,R}{P}+K  \,\left(\frac{P}{100}+1\right)^{n}
% Fungsi ini melakukan hal yang sama seperti fungsi f sebelumnya. Namun,
% fungsinya lebih efektif.
>longest f(5000,-200,3,47), longest fs(5000,-200,3,47)
     -19.82504734650985 
     -19.82504734652684 
% Kita sekarang dapat menggunakannya untuk menanyakan waktu n. Kapan
% modal kita habis? Perkiraan awal kita adalah 30 tahun.
>solve("fs(5000,-330,3,x)",30)
      20.51 
% Jawaban ini menyatakan bahwa akan negatif setelah 21 tahun.
% 
% Kita juga dapat menggunakan sisi simbolik Euler untuk menghitung rumus
% pembayaran.
% 
% Asumsikan kita mendapatkan pinjaman sebesar K, dan membayar n kali
% cicilan sebesar R (dimulai setelah tahun pertama) sehingga menyisakan
% utang residual sebesar Kn (pada saat pembayaran terakhir). Rumus untuk
% ini jelas
>equ &= fs(K,R,P,n)=Kn; $&equ
 %image% EMT4aljabar_23030630002-153.png
% // latex: \frac{100\,\left(\left(\frac{P}{100}+1\right)^{n}-1\right)\,R}{P}+K  \,\left(\frac{P}{100}+1\right)^{n}={\it Kn}
% Biasanya rumus ini diberikan dalam bentuk
% 
% latex: i = \frac{P}{100}
>equ &= (equ with P=100*i); $&equ
 %image% EMT4aljabar_23030630002-154.png
% // latex: \frac{\left(\left(i+1\right)^{n}-1\right)\,R}{i}+\left(i+1\right)^{  n}\,K={\it Kn}
% Kita dapat mencari laju R secara simbolis.
>$&solve(equ,R)
 %image% EMT4aljabar_23030630002-155.png
% // latex: \left[ R=\frac{i\,{\it Kn}-i\,\left(i+1\right)^{n}\,K}{\left(i+1  \right)^{n}-1} \right] 
% 
% Seperti yang dapat Anda lihat dari rumus, fungsi ini mengembalikan
% kesalahan floating point untuk i=0. Namun, Euler memplotnya.
% 
% Tentu saja, kita memiliki limit berikut.
>$&limit(R(5000,0,x,10),x,0)
 %image% EMT4aljabar_23030630002-156.png
% // latex: \lim_{x\rightarrow 0}{R\left(5000 , 0 , x , 10\right)}
% Jelas, tanpa bunga, kita harus membayar kembali 10 suku bunga sebesar
% 500.
% 
% Persamaan ini juga dapat diselesaikan untuk n. Akan terlihat lebih
% bagus jika kita menerapkan beberapa penyederhanaan.
>fn &= solve(equ,n) | ratsimp; $&fn
 %image% EMT4aljabar_23030630002-157.png
% // latex: \left[ n=\frac{\log \left(\frac{R+i\,{\it Kn}}{R+i\,K}\right)}{  \log \left(i+1\right)} \right] 
>
